<?phpnamespace Nemundo\Meteoschweiz\Content\Station;use Nemundo\Content\Index\Geo\Action\GeoIndexAction;use Nemundo\Content\Index\Geo\Type\GeoIndexTrait;use Nemundo\Content\Index\Search\Type\SearchIndexTrait;use Nemundo\Content\Index\Tree\Com\Form\ContentSearchForm;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Content\Type\JsonContentTrait;use Nemundo\Core\Type\Geo\GeoCoordinateAltitude;use Nemundo\Meteoschweiz\Content\Station\View\ChartContentView;use Nemundo\Meteoschweiz\Content\Station\View\StationContentView;use Nemundo\Meteoschweiz\Content\Station\View\WindChartContentView;use Nemundo\Meteoschweiz\Content\Station\View\WindStationContentView;use Nemundo\Meteoschweiz\Data\MesswertStation\MesswertStation;use Nemundo\Meteoschweiz\Data\MesswertStation\MesswertStationCount;use Nemundo\Meteoschweiz\Data\MesswertStation\MesswertStationId;use Nemundo\Meteoschweiz\Data\MesswertStation\MesswertStationReader;use Nemundo\Meteoschweiz\Data\MesswertStation\MesswertStationRow;use Nemundo\Meteoschweiz\Data\MesswertStation\MesswertStationUpdate;use Nemundo\Meteoschweiz\Parameter\StationParameter;use Nemundo\Meteoschweiz\Site\StationItemSite;class StationContentType extends AbstractContentType{    use SearchIndexTrait;    use GeoIndexTrait;    //use JsonContentTrait;    public $station;    public $stationCode;    /**     * @var GeoCoordinateAltitude     */    public $geoCoordinate;    protected function loadContentType()    {        $this->typeLabel = 'Meteoschweiz Messstation';        $this->typeId = 'bc9beb02-5609-45be-9f0d-73009369c9a4';        $this->formClassList[] = ContentSearchForm::class;        $this->viewClassList[] = StationContentView::class;        $this->viewClassList[] = WindStationContentView::class;        $this->viewClassList[]=ChartContentView::class;        $this->viewClassList[]=WindChartContentView::class;        $this->listingClass = StationContentListing::class;        $this->viewSite = StationItemSite::$site;        $this->parameterClass = StationParameter::class;        $this->geoCoordinate = new GeoCoordinateAltitude();    }    protected function onCreate()    {        $data = new MesswertStation();        //$data->updateOnDuplicate = true;        $data->stationCode = $this->stationCode;        $data->station = $this->station;        $data->geoCoordinate = $this->geoCoordinate;        $this->dataId = $data->save();    }    protected function onUpdate()    {        $update = new MesswertStationUpdate();        //$update->updateOnDuplicate = true;        $update->stationCode = $this->stationCode;        $update->station = $this->station;        $update->geoCoordinate = $this->geoCoordinate;        $update->updateById($this->dataId);    }    /*    protected function onIndex()    {        $this->addSearchText($this->getDataRow()->station);        $this->addSearchText($this->getDataRow()->stationCode);        $this->saveSearchIndex();        //$this->saveGeoIndex();        (new GeoIndexAction())->onAction($this);    }*/    public function fromStationCode($stationCode)    {    }    public function existItem()    {        $value = false;        $count = new MesswertStationCount();        $count->filter->andEqual($count->model->stationCode, $this->stationCode);        if ($count->getCount() === 1) {            $value = true;            $id = new MesswertStationId();            $id->filter->andEqual($id->model->stationCode, $this->stationCode);            $this->dataId = $id->getId();        }        return $value;    }    protected function onDataRow()    {        $this->dataRow = (new MesswertStationReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|MesswertStationRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        return $this->getDataRow()->station;    }    public function getPlace()    {        return $this->getDataRow()->station;    }    public function getCoordinate()    {        return $this->getDataRow()->geoCoordinate;    }    public function getData()    {        $data=[];        $data['id']=$this->getDataRow()->id;        $data['station']=$this->getDataRow()->station;        $data['station_code']=$this->getDataRow()->stationCode;        return $data;    }}