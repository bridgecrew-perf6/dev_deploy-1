<?phpnamespace Nemundo\Meteoschweiz\Reader\Messwert;use Nemundo\Core\Base\DataSource\AbstractDataSource;use Nemundo\Core\Csv\Reader\CsvReader;use Nemundo\Core\Csv\Reader\CsvRow;use Nemundo\Core\Type\DateTime\DateTime;use Nemundo\Core\Type\Text\Text;use Nemundo\Core\WebRequest\WebRequest;use Nemundo\Meteoschweiz\Path\MesswertTmpPath;use Nemundo\Meteoschweiz\Path\MeteoschweizTmpPath;class MesswertCsvReader extends AbstractDataSource{    protected function loadData()    {        $url = 'https://data.geo.admin.ch/ch.meteoschweiz.messwerte-aktuell/VQHA80.csv';        $filename = (new MeteoschweizTmpPath())            ->addPath('meteoschweiz_messwert.csv')            ->getFilename();        (new WebRequest())->downloadUrl($url, $filename);        $reader = new CsvReader();        $reader->filename = (new MesswertTmpPath())->getFilename();        foreach ($reader->getData() as $csvRow) {            $item = new MesswertItem();            $dateTimeText = new Text($csvRow->getValue('Date'));            $dateTime = new DateTime();            $dateTime->setYear($dateTimeText->getSubstring(0, 4));            $dateTime->setMonth($dateTimeText->getSubstring(4, 2));            $dateTime->setDay($dateTimeText->getSubstring(6, 2));            $dateTime->setHour($dateTimeText->getSubstring(8, 2));            $dateTime->setMinute($dateTimeText->getSubstring(10, 2));            $item->dateTime = $dateTime;            $item->stationCode = $csvRow->getValue('Station/Location');            $this->getTemperature($item, $csvRow, 'tre200s0');            $this->getTemperature($item, $csvRow, 'ta1tows0');            $this->getDewPoint($item, $csvRow, 'tde200s0');            $this->getDewPoint($item, $csvRow, 'tdetows0');            $this->getHumidity($item, $csvRow, 'ure200s0');            $this->getHumidity($item, $csvRow, 'uretows0');            $this->getWind($item, $csvRow, 'fu3010z0');            $this->getWind($item, $csvRow, 'fu3towz0');            $this->getWindGust($item, $csvRow, 'fu3010z1');            $this->getWindGust($item, $csvRow, 'fu3towz1');            $this->getWindDirection($item, $csvRow, 'dkl010z0');            $this->getWindDirection($item, $csvRow, 'dv1towz0');            $qnh = $csvRow->getValue('pp0qnhs0');            if ($qnh !== '-') {                $item->hasQnh = true;                $item->qnh = $qnh;            }            $item->qfe = $csvRow->getValue('prestas0');            $qff = $csvRow->getValue('pp0qffs0');            if ($qff !== '-') {                $item->hasQff = true;                $item->qff = $qff;            }            $precipitation = $csvRow->getValue('rre150z0');            if ($precipitation !== '-') {                $item->hasPrecipitation = true;                $item->precipitation = $precipitation;            }            $sunshine = $csvRow->getValue('sre000z0');            if ($sunshine !== '-') {                $item->hasSunshine = true;                $item->sunshine = $csvRow->getValue('sre000z0');            }            $item->globalRadiation = $csvRow->getValue('gre000z0');            $this->addItem($item);        }    }    private function getTemperature(MesswertItem $item, CsvRow $csvRow, $headerName)    {        $temperature = $csvRow->getValue($headerName);        if ($temperature !== '-') {            $item->hasTemperature = true;            $item->temperature = $temperature;        }    }    private function getWind(MesswertItem $item, CsvRow $csvRow, $headerName)    {        $value = $csvRow->getValue($headerName);        if ($value !== '-') {            $item->hasWind = true;            $item->wind = $value;        }    }    private function getWindGust(MesswertItem $item, CsvRow $csvRow, $headerName)    {        $value = $csvRow->getValue($headerName);        if ($value !== '-') {            $item->windGust = $value;        }    }    private function getWindDirection(MesswertItem $item, CsvRow $csvRow, $headerName)    {        $value = $csvRow->getValue($headerName);        if ($value !== '-') {            $item->hasWindDirection = true;            $item->windDirection = $value;        }    }    private function getDewPoint(MesswertItem $item, CsvRow $csvRow, $headerName)    {        $dewPoint = $csvRow->getValue($headerName);        if ($dewPoint !== '-') {            $item->dewPoint = $dewPoint;        }    }    private function getHumidity(MesswertItem $item, CsvRow $csvRow, $headerName)    {        $humidity = $csvRow->getValue($headerName);        if ($humidity !== '-') {            $item->hasHumidity = true;            $item->humidity = $humidity;        }    }    /**     * @return MesswertItem[]     */    public function getData()    {        return parent::getData();    }}