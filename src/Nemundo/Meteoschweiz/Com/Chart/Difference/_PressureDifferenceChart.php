<?phpnamespace Nemundo\Meteoschweiz\Com\Chart;use Nemundo\Com\Chart\Data\LineChartData;use Nemundo\Db\Sql\Order\SortOrder;use Nemundo\Meteoschweiz\Data\Messwert\MesswertReader;use Nemundo\Meteoschweiz\Data\MesswertStation\MesswertStationId;use Nemundo\Package\Echarts\Chart\AbstractEchart;class PressureDifferenceChart extends AbstractEchart  // AbstractDataChart  // AdminWidget{    /**     * @var string     */    public $stationCode1;    /**     * @var string     */    public $stationCode2;    /**     * @var int     */    public $messwertLimit = 100;    public function getContent()    {        $this->chartTitle = 'QNH Pressure Difference ' . $this->stationCode1 . ' - ' . $this->stationCode2;        $this->yMinValue = -12;        $this->yMaxValue=12;        $id = new MesswertStationId();        $id->filter->andEqual($id->model->stationCode, $this->stationCode1);        $stationId1 = $id->getId();        $id = new MesswertStationId();        $id->filter->andEqual($id->model->stationCode, $this->stationCode2);        $stationId2 = $id->getId();        if ($stationId1 !== '') {            /*            $difference = new QnhDifference();            $difference->station1Id = $stationId1;            $difference->station2Id = $stationId2;            $pressureDifference = $difference->getDifference();            $text = $pressureDifference . ' hPa';*/            /*            if ($pressureDifference>0) {                $text.=' (Nordüberdruck)';            }            if ($pressureDifference<0) {                $text.=' (Südüberdruck)';            }*/            //$table->addLabelValue($this->stationCode1 . '-' . $this->stationCode2, $text);            //$table->addLabelValue('Datum/Zeit', $difference->dateTime->getShortDateTimeLeadingZeroFormat() . ' UTC');            //$chart = new Chart($this);            $data = new LineChartData($this);            $qnh1 = [];            $reader = new MesswertReader();            $reader->model->loadStation();            $reader->filter->andEqual($reader->model->stationId, $stationId1);            $reader->addOrder($reader->model->id, SortOrder::DESCENDING);            $reader->limit = $this->messwertLimit;            $reader->reverse = true;            foreach ($reader->getData() as $messwertRow) {                //$table->addLabelValue($stationCode, $messwertRow->qnh.' hPa');                //$data->addValue($messwertRow->qnh);                if ($messwertRow->hasQnh) {                    $qnh1[] = $messwertRow->qnh;                } else {                    $qnh1[] = null;                }                //$chart->addXAxisLabel($messwertRow->dateTime->getShortDateTimeLeadingZeroFormat());            }            //(new Debug())->write($qnh1);            $n = 0;            $qnh2 = [];            $reader = new MesswertReader();            $reader->model->loadStation();            $reader->model->loadDateTime();            $reader->filter->andEqual($reader->model->stationId, $stationId2);            $reader->addOrder($reader->model->id, SortOrder::DESCENDING);            $reader->limit = $this->messwertLimit;            $reader->reverse = true;            foreach ($reader->getData() as $messwertRow) {                if ($messwertRow->hasQnh) {                    if ($qnh1[$n] !== null) {                        $qnh2[] = $messwertRow->qnh;                        $data->addValue($qnh1[$n] - $messwertRow->qnh);                        //$value[] = $messwertRow->qnh;                        $this->addXAxisLabel($messwertRow->dateTime->dateTime->getShortDateTimeLeadingZeroFormat());                        $n++;                    }                }            }        }        return parent::getContent();    }}