<?phpnamespace Nemundo\Meteoschweiz\Com\Chart\Messwert;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Core\Type\DateTime\DateTime;use Nemundo\Meteoschweiz\Data\Messwert\MesswertReader;use Nemundo\Meteoschweiz\Data\Messwert\MesswertRow;use Nemundo\Package\Echarts\Chart\AbstractEchart;abstract class AbstractMesswertChart extends AbstractEchart{    public $stationId;    /**     * @var DateTime     */    public $dateFrom;    /**     * @var DateTime     */    public $dateTo;    abstract protected function onDataRow(MesswertRow $messwertRow);    protected function getMesswertReader()    {        $reader = new MesswertReader();        $reader->model->loadDateTime();        $reader->filter->andEqual($reader->model->stationId, $this->stationId);        if ($this->dateFrom!==null) {            $reader->filter->andEqualOrGreater($reader->model->dateTime->dateTime, $this->dateFrom->getIsoDateTime());        }        if ($this->dateTo!==null) {            $reader->filter->andEqualOrSmaller($reader->model->dateTime->dateTime, $this->dateTo->getIsoDateTime());        }        $reader->addOrder($reader->model->id);        return $reader->getData();    }    public function getContent()    {        foreach ($this->getMesswertReader() as $messwertRow) {            $this->addXAxisLabel($messwertRow->dateTime->dateTime->getShortDateTimeLeadingZeroFormat());            $this->onDataRow($messwertRow);            /*            if ($messwertRow->hasTemperature) {                $temperatureLine->addValue($messwertRow->temperature);                $dewPointLine->addValue($messwertRow->dewPoint);                $this->addXAxisLabel($messwertRow->dateTime->dateTime->getShortDateTimeLeadingZeroFormat());            }*/        }        return parent::getContent(); // TODO: Change the autogenerated stub    }}