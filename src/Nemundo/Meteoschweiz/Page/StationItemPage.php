<?phpnamespace Nemundo\Meteoschweiz\Page;use Nemundo\Admin\Com\Button\AdminSearchButton;use Nemundo\Admin\Com\Button\AdminSubmitButton;use Nemundo\Admin\Com\Title\AdminSubtitle;use Nemundo\Com\FormBuilder\SearchForm;use Nemundo\Content\Com\Widget\ContentWidget;use Nemundo\Core\Type\DateTime\DateTime;use Nemundo\Html\Form\Input\HiddenInput;use Nemundo\Meteoschweiz\Content\Station\View\ChartContentView;use Nemundo\Meteoschweiz\Parameter\StationParameter;use Nemundo\Meteoschweiz\Template\MeteoschweizTemplate;use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;use Nemundo\Package\Bootstrap\FormElement\BootstrapFromToDatePicker;class StationItemPage extends MeteoschweizTemplate{    public function getContent()    {        $stationParameter = new StationParameter();        $stationId = (new StationParameter())->getValue();        $form = new SearchForm($this);        $formRow=new BootstrapRow($form);        $dateFromTo = new BootstrapFromToDatePicker($formRow);        $dateFromTo->searchMode = true;        $hidden = new HiddenInput($formRow);        $hidden->name = $stationParameter->getParameterName();        $hidden->value = $stationParameter->getValue();        new AdminSearchButton($formRow);        $widget=new ContentWidget($this);        $widget->contentType =  (new StationParameter())->getStationContentType();        $widget->viewId=(new ChartContentView())->viewId;        $widget->showAction=false;        //$contentType = (new StationParameter())->getStationContentType();        //$contentType->getDefaultView($this);        /*        $subtitle = new AdminSubtitle($this);        $subtitle->content = $contentType->getSubject();        $chart = new TemperatureChart($this);        $chart->stationId = $stationId;        if ($dateFromTo->hasValueFrom()) {            $chart->dateFrom = (new DateTime())->fromDate($dateFromTo->getDateFrom());        }        if ($dateFromTo->hasValueTo()) {            $chart->dateTo = (new DateTime())->fromDate($dateFromTo->getDateTo());        }        $chart = new WindChart($this);        $chart->stationId = $stationId;        if ($dateFromTo->hasValueFrom()) {            $chart->dateFrom = (new DateTime())->fromDate($dateFromTo->getDateFrom());        }        if ($dateFromTo->hasValueTo()) {            $chart->dateTo = (new DateTime())->fromDate($dateFromTo->getDateTo());        }        $chart = new WindDirectionChart($this);        $chart->stationId = $stationId;        if ($dateFromTo->hasValueFrom()) {            $chart->dateFrom = (new DateTime())->fromDate($dateFromTo->getDateFrom());        }        if ($dateFromTo->hasValueTo()) {            $chart->dateTo = (new DateTime())->fromDate($dateFromTo->getDateTo());        }        $chart = new QnhChart($this);        $chart->stationId = $stationId;        if ($dateFromTo->hasValueFrom()) {            $chart->dateFrom = (new DateTime())->fromDate($dateFromTo->getDateFrom());        }        if ($dateFromTo->hasValueTo()) {            $chart->dateTo = (new DateTime())->fromDate($dateFromTo->getDateTo());        }        $chart = new HumidityChart($this);        $chart->stationId = $stationId;        if ($dateFromTo->hasValueFrom()) {            $chart->dateFrom = (new DateTime())->fromDate($dateFromTo->getDateFrom());        }        if ($dateFromTo->hasValueTo()) {            $chart->dateTo = (new DateTime())->fromDate($dateFromTo->getDateTo());        }*/        return parent::getContent();    }}