<?phpnamespace Nemundo\Meteoschweiz\Page;use Nemundo\Admin\Com\Table\AdminClickableTable;use Nemundo\Admin\Com\Table\Sorting\AdminUpdDownSortingHyperlink;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Db\Sql\Order\SortOrder;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Meteoschweiz\Content\Station\StationContentType;use Nemundo\Meteoschweiz\Data\Messwert\MesswertReader;use Nemundo\Meteoschweiz\Data\MesswertDateTime\MesswertDateTimeReader;use Nemundo\Meteoschweiz\Template\MeteoschweizTemplate;use Nemundo\Package\Bootstrap\Table\BootstrapClickableTableRow;class MeteoschweizPage extends MeteoschweizTemplate{    public function getContent()    {        // last        $messwertReader = new MesswertDateTimeReader();        $messwertReader->addOrder($messwertReader->model->id, SortOrder::DESCENDING);        $messwertReader->limit = 1;        foreach ($messwertReader->getData() as $messwertDateTimeRow) {            $p = new Paragraph($this);            $p->content = 'Messwert von ' . $messwertDateTimeRow->dateTime->getShortDateTimeLeadingZeroFormat() . ' UTC';            $messwertReader = new MesswertReader();            $messwertReader->filter->andEqual($messwertReader->model->dateTimeId, $messwertDateTimeRow->id);            $messwertReader->model->loadStation();            $table = new AdminClickableTable($this);            $header = new TableHeader($table);            //$header->addText($messwertReader->model->station->label);            $sorting = new AdminUpdDownSortingHyperlink($header);            $sorting->label = $messwertReader->model->station->label;            $sorting->fieldType = $messwertReader->model->station;            $sorting->checkSorting($messwertReader);            $sorting = new AdminUpdDownSortingHyperlink($header);            $sorting->label = $messwertReader->model->station->geoCoordinate->altitude->label;            $sorting->fieldType = $messwertReader->model->station->geoCoordinate->altitude;            $sorting->sortOrder = SortOrder::DESCENDING;            $sorting->checkSorting($messwertReader);            //$header->addText($messwertReader->model->station->geoCoordinate->altitude->label);            $header->addText($messwertReader->model->temperature->label);            $header->addText($messwertReader->model->dewPoint->label);            $header->addText($messwertReader->model->qnh->label);            //$header->addText($messwertReader->model->wind->label);            $sorting = new AdminUpdDownSortingHyperlink($header);            $sorting->label = $messwertReader->model->wind->label;            $sorting->fieldType = $messwertReader->model->wind;            $sorting->sortOrder = SortOrder::DESCENDING;            $sorting->checkSorting($messwertReader);            $header->addText($messwertReader->model->humidity->label);            // $header->addText($messwertReader->model->wind->label);            $header->addText($messwertReader->model->precipitation->label);            $header->addText($messwertReader->model->sunshine->label);            $header->addText($messwertReader->model->globalRadiation->label);            foreach ($messwertReader->getData() as $messwertRow) {                $row = new BootstrapClickableTableRow($table);                $row->addText($messwertRow->station->station);                $row->addText($messwertRow->station->geoCoordinate->altitude);                $row->addText($messwertRow->getTemperatureText());                $row->addText($messwertRow->getDewPointText());                $row->addText($messwertRow->getPressureText());                $row->addText($messwertRow->getWindText());                $row->addText($messwertRow->getHumidityText());                $row->addText($messwertRow->getPrecipitationText());                $row->addText($messwertRow->getSunshineText());                $row->addText($messwertRow->getGlobalRadiationText());                $row->addClickableSite((new StationContentType($messwertRow->stationId))->getViewSite());            }        }        return parent::getContent();    }}