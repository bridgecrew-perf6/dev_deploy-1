<?phpnamespace Nemundo\Meteoschweiz\Page;use Nemundo\Admin\Com\Table\AdminClickableTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Com\Table\Row\AdminClickableTableRow;use Nemundo\Admin\Com\Table\Sorting\AdminUpdDownSortingHyperlink;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Db\Sql\Field\Aggregate\MaxField;use Nemundo\Db\Sql\Order\SortOrder;use Nemundo\Meteoschweiz\Com\Form\MesswertSearchForm;use Nemundo\Meteoschweiz\Content\Station\StationContentType;use Nemundo\Meteoschweiz\Data\Messwert\MesswertPaginationReader;use Nemundo\Meteoschweiz\Data\Messwert\MesswertReader;use Nemundo\Meteoschweiz\Parameter\StationParameter;use Nemundo\Meteoschweiz\Template\MeteoschweizTemplate;use Nemundo\Package\Bootstrap\Pagination\BootstrapPagination;class MesswertPage extends MeteoschweizTemplate{    public function getContent()    {        //search        new MesswertSearchForm($this);        $messwertReader = new MesswertPaginationReader();        $messwertReader->model->loadStation();        $messwertReader->model->loadDateTime();        $messwertReader->filter->andEqual($messwertReader->model->hasTemperature,true);        //$reader->addOrder($reader->model->temperature,SortOrder::DESCENDING);        //$reader->addGroup($reader->model->stationId);        //$reader->limit = 10;        $stationParameter=new StationParameter();        if ($stationParameter->hasValue()) {            $messwertReader->filter->andEqual($messwertReader->model->stationId,$stationParameter->getValue());        }        /*$max=new MaxField($reader);        $max->aggregateField=$reader->model->temperature;*/        //$reader->addOrder($max,SortOrder::DESCENDING);        $table= new AdminClickableTable($this);        $header=new AdminTableHeader($table);        /*$header->addText($reader->model->station->label);        $header->addText($reader->model->dateTime->label);        $header->addText($reader->model->temperature->label);*/        $sorting=new AdminUpdDownSortingHyperlink($header);        $sorting->fieldType = $messwertReader->model->station->station;        $sorting->checkSorting($messwertReader);        $sorting=new AdminUpdDownSortingHyperlink($header);        $sorting->fieldType = $messwertReader->model->dateTime;        $sorting->checkSorting($messwertReader);        $sorting=new AdminUpdDownSortingHyperlink($header);        $sorting->fieldType = $messwertReader->model->temperature;        $sorting->checkSorting($messwertReader);        $sorting=new AdminUpdDownSortingHyperlink($header);        $sorting->fieldType = $messwertReader->model->wind;        $sorting->checkSorting($messwertReader);        foreach ($messwertReader->getData() as $messwertRow) {            $row=new AdminClickableTableRow($table);            $row->addText($messwertRow->station->station);            $row->addText($messwertRow->dateTime->dateTime->getShortDateTimeLeadingZeroFormat());            $row->addText($messwertRow->getTemperatureText());            $row->addText($messwertRow->getWindText());            //$row->addText($messwertRow->getModelValue($max));            //$contentType = new StationContentType($messwertRow->stationId);            //$row->addClickableSite($contentType->getViewSite());        }        $pagination=new BootstrapPagination($this);        $pagination->paginationReader=$messwertReader;        return parent::getContent();    }}