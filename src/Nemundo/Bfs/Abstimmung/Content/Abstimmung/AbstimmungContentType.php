<?phpnamespace Nemundo\Bfs\Abstimmung\Content\Abstimmung;use Nemundo\Bfs\Abstimmung\Data\Abstimmung\AbstimmungReader;use Nemundo\Bfs\Abstimmung\Data\Abstimmung\AbstimmungRow;use Nemundo\Content\Index\Calendar\DateTimeIndexTrait;use Nemundo\Content\Index\Tree\Com\Form\ContentSearchForm;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Core\Type\DateTime\DateTime;class AbstimmungContentType extends AbstractContentType{    use DateTimeIndexTrait;    protected function loadContentType()    {        $this->typeLabel = 'EidgenÃ¶ssische Abstimmungen';        $this->typeId = 'b0ac4615-1c6e-4200-887c-27c481fb4416';        $this->formClassList[] = ContentSearchForm::class;        $this->viewClassList[] = AbstimmungContentView::class;        //$this->viewClassList[] = AbstimmungKantonContentView::class;*/        /*$this->viewSite = AbstimmungSite::$site;        $this->parameterClass = AbstimmungParameter::class;*/    }    protected function onDelete()    {    }    /*protected function onIndex()    {        $this->addSearchText($this->getSubject());    }*/    protected function onDataRow()    {        $reader = new AbstimmungReader();        $reader->model->loadDatum();        $this->dataRow = $reader->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|AbstimmungRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        return $this->getDataRow()->abstimmung;    }    public function getDateTime()    {        $dateTime = (new DateTime())->fromDate($this->getDataRow()->datum->datum);        return $dateTime;    }}