<?phpnamespace Nemundo\Bfs\Abstimmung\Content\AbstimmungResultatWidget;use Nemundo\Bfs\Abstimmung\Data\AbstimmungResultatWidget\AbstimmungResultatWidget;use Nemundo\Bfs\Abstimmung\Data\AbstimmungResultatWidget\AbstimmungResultatWidgetDelete;use Nemundo\Bfs\Abstimmung\Data\AbstimmungResultatWidget\AbstimmungResultatWidgetReader;use Nemundo\Bfs\Abstimmung\Data\AbstimmungResultatWidget\AbstimmungResultatWidgetRow;use Nemundo\Bfs\Abstimmung\Data\AbstimmungResultatWidget\AbstimmungResultatWidgetUpdate;use Nemundo\Bfs\Abstimmung\Parameter\AbstimmungParameter;use Nemundo\Bfs\Abstimmung\Site\AbstimmungSite;use Nemundo\Content\Type\AbstractContentType;class AbstimmungResultatWidgetContentType extends AbstractContentType{        public $abstimmungId;        public $geoLevelId;    public $limit;    public $sortOrderId;    protected function loadContentType()    {        $this->typeLabel = 'Abstimmung Resultat Widget';        $this->typeId = 'f70fdd7e-6fb0-4c00-8eb3-979b63a4dc52';        $this->formClassList[] = AbstimmungResultatWidgetContentForm::class;        $this->viewClassList[] = AbstimmungResultatWidgetContentView::class;        $this->viewSite = AbstimmungSite::$site;        $this->parameterClass=AbstimmungParameter::class;    }    protected function onCreate()    {                $data=new AbstimmungResultatWidget();        $data->abstimmungId=$this->abstimmungId;        $data->geoLevelId=$this->geoLevelId;        $data->limit=$this->limit;        $data->sortOrderId=$this->sortOrderId;        $this->dataId=$data->save();                    }    protected function onUpdate()    {        $update=new AbstimmungResultatWidgetUpdate();        $update->abstimmungId=$this->abstimmungId;        $update->geoLevelId=$this->geoLevelId;        $update->limit=$this->limit;        $update->sortOrderId=$this->sortOrderId;        $update->updateById($this->getDataId());    }    protected function onDelete()    {        (new AbstimmungResultatWidgetDelete())->deleteById($this->getDataId());    }    protected function onDataRow()    {        $reader = new AbstimmungResultatWidgetReader();        $reader->model->loadAbstimmung();        $reader->model->abstimmung->loadDatum();        $reader->model->loadGeoLevel();        $reader->model->loadSortOrder();        $this->dataRow= $reader->getRowById($this->getDataId());    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|AbstimmungResultatWidgetRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        //$subject= $this->getDataRow()->abstimmung->abstimmung.' - '.$this->getDataRow()->geoLevel->geoLevel;        $subject= $this->getDataRow()->abstimmung->abstimmung.' - '.$this->getDataRow()->abstimmung->datum->datum->getLongFormat();        return $subject;    }}