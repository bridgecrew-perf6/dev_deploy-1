<?phpnamespace Nemundo\Bfs\Abstimmung\Page;use Nemundo\Bfs\Abstimmung\Com\JavaScript\AbstimmungModuleJavaScript;use Nemundo\Com\Template\AbstractTemplateDocument;class AbstimmungPage extends AbstractTemplateDocument{    public function getContent()    {        new AbstimmungModuleJavaScript($this);        /*        $form = new SearchForm($this);        $row = new BootstrapRow($form);        $geoLevel = new GeoLevelListBox($row);        $geoLevel->submitOnChange = true;        $geoLevel->searchMode = true;        $geoLevel->emptyValueAsDefault = false;        $geoLevel->column = true;        $geoLevel->columnSize = 2;        $geo = new GeoListBox($row);        $geo->submitOnChange = true;        $geo->searchMode = true;        $geo->column = true;        $geo->columnSize = 2;        if ($geoLevel->hasValue()) {            $geo->geoLevelId = $geoLevel->getValue();        }        $jahr = new JahrListBox($row);        $jahr->submitOnChange = true;        $jahr->searchMode = true;        $jahr->column = true;        $jahr->columnSize = 1;        $datum = new DatumListBox($row);        $datum->submitOnChange = true;        $datum->searchMode = true;        $datum->column = true;        $datum->columnSize = 1;        $datum->filterByJahr = $jahr->hasValue();        $datum->jahr = $jahr->getValue();        $abstimmung = new AbstimmungListBox($row);        $abstimmung->submitOnChange = true;        $abstimmung->searchMode = true;        $abstimmung->column = true;        $abstimmung->columnSize = 2;        $abstimmung->filterByDatum = $datum->hasValue();        $abstimmung->datumId = $datum->getValue();        $abstimmung->filterByJahr = $jahr->hasValue();        $abstimmung->jahr = $jahr->getValue();        $btn = new AdminIconSiteButton($row);  // new AdminSearchIcon($row);        $btn->site = SearchClearSite::$site;        //$table2=new GeoAbstimmungTable($this);        //$table2->geoLevelId=(new KantonGeoLevel())->level;        $table = new AdminTable($this);        $resultatReader = new ResultatPaginationReader();        $resultatReader->model->loadAbstimmung();        $resultatReader->model->abstimmung->loadDatum();        $resultatReader->model->loadGeo();        if ($geoLevel->hasValue()) {            $resultatReader->filter->andEqual($resultatReader->model->geo->geoLevelId, $geoLevel->getValue());        }        $showAbstimmung = true;        if ($abstimmung->hasValue()) {            $showAbstimmung = false;            $resultatReader->filter->andEqual($resultatReader->model->abstimmungId, $abstimmung->getValue());        }        if ($geo->hasValue()) {            $resultatReader->filter->andEqual($resultatReader->model->geoId, $geo->getValue());        }        $resultatReader->paginationLimit = 30;        $header = new AdminTableHeader($table);        if ($showAbstimmung) {            $header->addText($resultatReader->model->abstimmung->datum->label);            $header->addText($resultatReader->model->abstimmung->label);        }        //$header->addText($resultatReader->model->geo->label);        // UpDownSortingHyperlink()        $sorting = new UpDownSortingHyperlink($header);        $sorting->label = $resultatReader->model->geo->label;        $sorting->fieldType = $resultatReader->model->geo->geo;        $sorting->checkSorting($resultatReader);        //$header->addText($resultatReader->model->jaProzent->label);        $sorting = new UpDownSortingHyperlink($header);        $sorting->label = $resultatReader->model->jaProzent->label;        $sorting->fieldType = $resultatReader->model->jaProzent;        $sorting->checkSorting($resultatReader);        //$header->addText($resultatReader->model->jaAbsolut->label);        $sorting = new UpDownSortingHyperlink($header);        $sorting->label = $resultatReader->model->jaAbsolut->label;        $sorting->fieldType = $resultatReader->model->jaAbsolut;        $sorting->checkSorting($resultatReader);        //$header->addText($resultatReader->model->neinAbsolut->label);        $sorting = new UpDownSortingHyperlink($header);        $sorting->label = $resultatReader->model->neinAbsolut->label;        $sorting->fieldType = $resultatReader->model->neinAbsolut;        $sorting->checkSorting($resultatReader);        //$header->addText($resultatReader->model->stimmbeteiligungProzent->label);        $sorting = new UpDownSortingHyperlink($header);        $sorting->label = $resultatReader->model->stimmbeteiligungProzent->label;        $sorting->fieldType = $resultatReader->model->stimmbeteiligungProzent;        $sorting->checkSorting($resultatReader);        foreach ($resultatReader->getData() as $resultatRow) {            $row = new TableRow($table);            if ($showAbstimmung) {                //$row->addText($resultatRow->abstimmung->datum->datum->getShortDateLeadingZeroFormat());                $site = new Site();                $site->addParameter(new DatumParameter($resultatRow->abstimmung->datumId));                $site->addParameter(new GeoLevelParameter((new KantonGeoLevel())->id));                $site->title = $resultatRow->abstimmung->datum->datum->getShortDateLeadingZeroFormat();                $hyperlink = new SiteHyperlink($row);                $hyperlink->site = $site;                $hyperlink->addCssClass('text-decoration-none');                //$row->addSite($site);                //$row->addText($resultatRow->abstimmung->abstimmung);                $site = new Site();                $site->addParameter(new AbstimmungParameter($resultatRow->abstimmungId));                $site->addParameter(new GeoLevelParameter((new KantonGeoLevel())->id));                $site->title = $resultatRow->abstimmung->abstimmung;                //$row->addSite($site);                $hyperlink = new SiteHyperlink($row);                $hyperlink->site = $site;                $hyperlink->addCssClass('text-decoration-none');            }            $row->addText($resultatRow->geo->geo);            $row->addText($resultatRow->getJaProzent(), true);            $row->addText($resultatRow->getJaStimmen());            $row->addText($resultatRow->getNeinStimmen());            $row->addText($resultatRow->getStimmbeteiligungProzent(), true);        }        $pagination = new BootstrapPagination($this);        $pagination->paginationReader = $resultatReader;*/        return parent::getContent();    }}