<?phpnamespace Nemundo\Bfs\Abstimmung\Com\Chart;use Nemundo\Admin\Com\Table\AdminLabelValueTable;use Nemundo\Bfs\Abstimmung\Data\Abstimmung\AbstimmungReader;use Nemundo\Bfs\Abstimmung\Data\Resultat\ResultatReader;use Nemundo\Bfs\Abstimmung\Type\GeoLevel\BundGeoLevel;use Nemundo\Com\Chart\Data\LineChartData;use Nemundo\Content\App\Chart\Data\ChartData\ChartData;use Nemundo\Content\App\Chart\Data\ChartLine\ChartLine;use Nemundo\Core\Type\Number\Number;use Nemundo\Db\Sql\Field\Aggregate\AverageField;use Nemundo\Package\Echarts\Chart\Echart;class StimmbeteiligungChart extends Echart{    public function getContent()    {        $line=new LineChartData($this);        $reader = new ResultatReader();        $reader->model->loadAbstimmung();        $reader->model->abstimmung->loadDatum();        //$reader->filter->andEqual($reader->model->abstimmungId, $this->contentType->getDataId());        $reader->filter->andEqual($reader->model->geoId, (new BundGeoLevel())->id);//        $reader->addGroup($reader->model->abstimmung->datum->datum);        $reader->addGroup($reader->model->abstimmung->datum->jahr);        $reader->addOrder($reader->model->abstimmung->datum->datum);        $average = new AverageField($reader);        $average->aggregateField = $reader->model->stimmbeteiligungProzent;        foreach ($reader->getData() as $resultatCustomRow) {            //$line->addValue($resultatCustomRow->stimmbeteiligungProzent);            $number = (new Number($resultatCustomRow->getModelValue($average)))->getRoundedNumber(1);//            $line->addValue($resultatCustomRow->getModelValue($average));            $line->addValue($number);            $this->addXAxisLabel( $resultatCustomRow->abstimmung->datum->jahr);            //$this->addXAxisLabel( $resultatCustomRow->abstimmung->datum->datum->getShortDateLeadingZeroFormat());            /*            $table = new AdminLabelValueTable($this);            $table->addLabelValue($resultatCustomRow->model->abstimmung->datum->label, $resultatCustomRow->abstimmung->datum->datum->getLongFormat());            $table->addLabelValue($resultatCustomRow->model->jaProzent->label, $resultatCustomRow->getJaProzent());            $table->addLabelValue($resultatCustomRow->model->jaAbsolut->label, $resultatCustomRow->getJaStimmen());            $table->addLabelValue($resultatCustomRow->model->neinAbsolut->label, $resultatCustomRow->getNeinStimmen());            $table->addLabelValue($resultatCustomRow->model->stimmbeteiligungProzent->label, $resultatCustomRow->getStimmbeteiligungProzent());            $table->addLabelValue($resultatCustomRow->model->neinAbsolut->label, $resultatCustomRow->getStimmbeteiligungProzent());*/        }        /*        $reader = new AbstimmungReader();        $reader->model->loadDatum();        foreach ($reader->getData() as $abstimmungRow) {            $line->addValue($abstimmungRow->id);            $this->addXAxisLabel($abstimmungRow->id);        }*/        return parent::getContent(); // TODO: Change the autogenerated stub    }}