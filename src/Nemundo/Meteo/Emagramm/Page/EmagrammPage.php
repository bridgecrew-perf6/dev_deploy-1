<?phpnamespace Nemundo\Meteo\Emagramm\Page;use Nemundo\Admin\Com\Button\AdminSearchButton;use Nemundo\Com\FormBuilder\SearchForm;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Core\Language\LanguageCode;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Db\Filter\Filter;use Nemundo\Html\Block\Div;use Nemundo\Html\Formatting\Small;use Nemundo\Html\Heading\H2;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Html\Script\JavaScript;use Nemundo\Html\Script\JavaScriptType;use Nemundo\Meteo\Emagramm\Com\ListBox\LocationListBox;use Nemundo\Meteo\Emagramm\Content\Emagramm\EmagrammContentType;use Nemundo\Meteo\Emagramm\Data\Emagramm\EmagrammReader;use Nemundo\Meteo\Emagramm\Data\Location\LocationId;use Nemundo\Package\Bootstrap\FormElement\BootstrapDatePicker;use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;class EmagrammPage extends AbstractTemplateDocument{    public function getContent()    {        $script = new JavaScript($this);        $script->type= JavaScriptType::MODULE;  // 'module';        $script->defer=true;        $script->src='/js/meteo/Emagramm.js';        //$form = new SearchForm($this);        $formRow = new BootstrapRow($this);        $listbox = new LocationListBox($formRow);        $listbox->label = 'Emagramm';        $listbox->name = 'emagramm';        $listbox->inputId='emagramm_location';        /*$listbox->emptyValueAsDefault = false;        $listbox->submitOnChange = true;        $listbox->searchMode = true;*/        //$listbox->value = $listbox->getValue();        $datePicker = new BootstrapDatePicker($formRow);        $datePicker->label[LanguageCode::EN] = 'Date';        $datePicker->label[LanguageCode::DE] = 'Datum';        $datePicker->name = 'date';        //$datePicker->searchItem= true;        if ($datePicker->hasValue()) {            $datePicker->searchMode = true;        } else {            $datePicker->value = (new Date())->setNow()->getShortDateLeadingZeroFormat();        }        //new AdminSearchButton($formRow);        $locationId = $listbox->getValue();        if ($locationId == '') {            $id = new LocationId();            $id->filter->andEqual($id->model->location, 'Payerne');            $locationId = $id->getId();            $listbox->value = $locationId;        }        $date = (new Date())->fromGermanFormat($datePicker->getValue());        $h2=new H2($this);        $h2->id='location_title';        $h2->content='location';        $emagrammReader = new EmagrammReader();        $emagrammReader->limit = 2;        $emagrammReader->filter->andEqual($emagrammReader->model->locationId, $locationId);        //$emagrammReader->filter->andEqual($emagrammReader->model->dateTime,$date->getIsoDateFormat());        $filter = new Filter();        $filter->orEqual($emagrammReader->model->dateTime, $date->getIsoDate() . ' 00:00');        $filter->orEqual($emagrammReader->model->dateTime, $date->getIsoDate() . ' 12:00');        $emagrammReader->filter->andFilter($filter);        $emagrammReader->addOrder($emagrammReader->model->dateTime);        if ($emagrammReader->getCount() > 0) {            foreach ($emagrammReader->getData() as $emagrammRow) {                $type = (new EmagrammContentType($emagrammRow->id));                $type->getDefaultView($this);            }        } else {            $p = new Paragraph($this);            $p->content[LanguageCode::EN] = 'Not available';            $p->content[LanguageCode::DE] = 'Nicht verfÃ¼gbar';        }        $div = new Div($this);        $small = new Small($div);        $small->content = 'Quelle: Meteo Schweiz';        return parent::getContent();    }}