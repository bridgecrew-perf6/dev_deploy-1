<?phpnamespace Paranautik\App\Emagramm\Widget;use Nemundo\Admin\Com\Button\AdminEventButton;use Nemundo\Admin\Com\Button\AdminSiteButton;use Nemundo\Com\FormBuilder\SearchForm;use Nemundo\Com\JavaScript\Event\ChangeEvent;use Nemundo\Com\JavaScript\Event\ClickEvent;use Nemundo\Com\JavaScript\Event\ContentLoadedEvent;use Nemundo\Core\Language\LanguageCode;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Db\Filter\Filter;use Nemundo\Html\Block\Div;use Nemundo\Html\Form\Button\SubmitButton;use Nemundo\Html\Formatting\Small;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Html\Script\JavaScript;use Nemundo\Package\Bootstrap\Button\BootstrapButton;use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;use Nemundo\Package\Bootstrap\FormElement\BootstrapDatePicker;use Nemundo\Package\Bootstrap\Image\BootstrapResponsiveImage;use Nemundo\Package\Jquery\Code\JsonLoadCode;use Paranautik\App\Emagramm\Content\Type\EmagrammContentType;use Paranautik\App\Emagramm\Data\Category\CategoryId;use Paranautik\App\Emagramm\Data\Category\CategoryListBox;use Paranautik\App\Emagramm\Data\Emagramm\EmagrammReader;use Paranautik\App\Emagramm\Parameter\EmagrammParameter;use Paranautik\App\Emagramm\Site\EmagrammJsonSite;use Paranautik\App\Emagramm\Site\EmagrammSite;use Paranautik\Widget\AbstractParanautikWidget;class EmagrammAjaxWidget extends AbstractParanautikWidget{    public function getContent()    {        $this->widgetTitle = 'Emagramm';        $this->widgetSite = EmagrammSite::$site;        $btn = new AdminSiteButton($this);        $btn->site = EmagrammJsonSite::$site;        $formRow = new BootstrapRow($this);        $listbox = new CategoryListBox($formRow);        $listbox->label = 'Emagramm';        //$listbox->name = 'emagramm_auswahl';        $listbox->inputId = 'emagramm_auswahl';        $btn = new AdminEventButton($this);        $btn->content = 'Load';        //$btn->id = 'emagramm_btn';        $event = new ClickEvent($btn);        $event->addCodeLine('alert("beer");');//$btn->addEvent($event);        $img = new BootstrapResponsiveImage($this);        $img->id = 'emagramm_img';        $script = new JavaScript($this);        $event = new ContentLoadedEvent($script);        $event->addCodeLine('document.getElementById("source").innerHTML = "New text!";');        $event = new ChangeEvent($script);  // new ClickEvent($script);        $event->eventId =  $listbox->inputId;        //document.getElementById("elementId");        $event->addCodeLine('value = document.getElementById("'.$listbox->inputId.'").value;');        $event->addCodeLine('document.getElementById("source").innerHTML = value;');        $json = new JsonLoadCode($event);        $json->jsonSite = EmagrammJsonSite::$site;        $json->jsParameter= '+ "?emagramm=" +document.getElementById("'.$listbox->inputId.'").value';        //$json->jsonSite->addParameter(new EmagrammParameter());        //$json->addCodeLine('console.log(data[0]);');        $json->addCodeLine('$.each(data[0], function(key, value) {');        $json->addCodeLine('console.log(value);');        $json->addCodeLine('$("#'.$img->id.'").attr("src",value);');        $json->addCodeLine('});');        $json->addCodeLine('');        //$event->addCodeLine()        /*        $.getJSON( "ajax/test.json", function( data ) {            var items = [];            $.each( data, function( key, val ) {                items.push( "<li id='" + key + "'>" + val + "</li>" );            });            $( "<ul/>", {    "class": "my-new-list",    html: items.join( "" )  }).appendTo( "body" );});*/        /*        $listbox->submitOnChange = true;        $listbox->value = $listbox->getValue();        $datePicker = new BootstrapDatePicker($formRow);        $datePicker->label[LanguageCode::EN] = 'Date';        $datePicker->label[LanguageCode::DE] = 'Datum';        $datePicker->value = (new Date())->setNow()->getShortDateLeadingZeroFormat();        // onChange Event        $submit = new SubmitButton($formRow);        $submit->label = 'ok';        $categoryId = $listbox->getValue();        if ($categoryId == '') {            $id = new CategoryId();            $id->filter->andEqual($id->model->category, 'Payerne');            $categoryId = $id->getId();            $listbox->value = $categoryId;        }        $date = (new Date())->fromGermanFormat($datePicker->getValue());        $emagrammReader = new EmagrammReader();        $emagrammReader->limit = 2;        $emagrammReader->filter->andEqual($emagrammReader->model->categoryId, $categoryId);        //$emagrammReader->filter->andEqual($emagrammReader->model->dateTime,$date->getIsoDateFormat());        $filter = new Filter();        $filter->orEqual($emagrammReader->model->dateTime, $date->getIsoDateFormat() . ' 00:00');        $filter->orEqual($emagrammReader->model->dateTime, $date->getIsoDateFormat() . ' 12:00');        $emagrammReader->filter->andFilter($filter);        $emagrammReader->addOrder($emagrammReader->model->dateTime); //, SortOrder::DESCENDING);        if ($emagrammReader->getCount() > 0) {            foreach ($emagrammReader->getData() as $emagrammRow) {                //$img = new BootstrapResponsiveImage($this);                //$img->src = $emagrammRow->emagramm->getUrl();                $view = (new EmagrammContentType($emagrammRow->id));                $view->getView($this);            }        } else {            $p = new Paragraph($this);            $p->content[LanguageCode::EN] = 'Not available';            $p->content[LanguageCode::DE] = 'Nicht verfÃ¼gbar';        }*/        $div = new Div($this);        $small = new Small($div);        $small->id = 'source';        $small->content = 'Quelle: Meteo Schweiz';        return parent::getContent();    }}