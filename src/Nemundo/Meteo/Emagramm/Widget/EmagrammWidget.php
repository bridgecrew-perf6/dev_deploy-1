<?phpnamespace Paranautik\App\Emagramm\Widget;use Nemundo\Admin\Com\Button\AdminSearchButton;use Nemundo\Com\FormBuilder\SearchForm;use Nemundo\Core\Language\LanguageCode;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Db\Filter\Filter;use Nemundo\Html\Block\Div;use Nemundo\Html\Formatting\Small;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;use Nemundo\Package\Bootstrap\FormElement\BootstrapDatePicker;use Paranautik\App\Emagramm\Content\Type\EmagrammContentType;use Paranautik\App\Emagramm\Data\Category\CategoryId;use Paranautik\App\Emagramm\Data\Category\CategoryListBox;use Paranautik\App\Emagramm\Data\Emagramm\EmagrammReader;use Paranautik\App\Emagramm\Site\EmagrammSite;use Paranautik\Widget\AbstractParanautikWidget;class EmagrammWidget extends AbstractParanautikWidget{    public function getContent()    {        $this->widgetTitle = 'Emagramm';        $this->widgetSite = EmagrammSite::$site;        $form = new SearchForm($this);        $formRow = new BootstrapRow($form);        $listbox = new CategoryListBox($formRow);        $listbox->label = 'Emagramm';        $listbox->name = 'emagramm';        $listbox->emptyValueAsDefault=false;        $listbox->submitOnChange = true;        $listbox->searchItem=true;        //$listbox->value = $listbox->getValue();        $datePicker = new BootstrapDatePicker($formRow);        $datePicker->label[LanguageCode::EN] = 'Date';        $datePicker->label[LanguageCode::DE] = 'Datum';        $datePicker->name = 'date';        //$datePicker->searchItem= true;        if ($datePicker->hasValue()) {            $datePicker->searchItem= true;        } else {            $datePicker->value = (new Date())->setNow()->getShortDateLeadingZeroFormat();        }        new AdminSearchButton($formRow);        $categoryId = $listbox->getValue();        if ($categoryId == '') {            $id = new CategoryId();            $id->filter->andEqual($id->model->category, 'Payerne');            $categoryId = $id->getId();            $listbox->value = $categoryId;        }        $date = (new Date())->fromGermanFormat($datePicker->getValue());        $emagrammReader = new EmagrammReader();        $emagrammReader->limit = 2;        $emagrammReader->filter->andEqual($emagrammReader->model->categoryId, $categoryId);        //$emagrammReader->filter->andEqual($emagrammReader->model->dateTime,$date->getIsoDateFormat());        $filter = new Filter();        $filter->orEqual($emagrammReader->model->dateTime, $date->getIsoDate() . ' 00:00');        $filter->orEqual($emagrammReader->model->dateTime, $date->getIsoDate() . ' 12:00');        $emagrammReader->filter->andFilter($filter);        $emagrammReader->addOrder($emagrammReader->model->dateTime);        if ($emagrammReader->getCount() > 0) {            foreach ($emagrammReader->getData() as $emagrammRow) {                //$img = new BootstrapResponsiveImage($this);                //$img->src = $emagrammRow->emagramm->getUrl();                $view = (new EmagrammContentType($emagrammRow->id));                $view->getView($this);            }        } else {            $p = new Paragraph($this);            $p->content[LanguageCode::EN] = 'Not available';            $p->content[LanguageCode::DE] = 'Nicht verfÃ¼gbar';        }        $div = new Div($this);        $small = new Small($div);        $small->content = 'Quelle: Meteo Schweiz';        return parent::getContent();    }}