<?phpnamespace Nemundo\Meteo\Emagramm\Content\Emagramm;use Nemundo\Content\App\Timeline\Index\TimelineIndexTrait;use Nemundo\Content\Index\Tree\Com\Form\ContentSearchForm;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Content\Type\JsonContentTrait;use Nemundo\Meteo\Emagramm\Data\Emagramm\EmagrammReader;use Nemundo\Meteo\Emagramm\Data\Emagramm\EmagrammRow;use Nemundo\Model\Row\AbstractModelDataRow;class EmagrammContentType extends AbstractContentType{    use TimelineIndexTrait;    //use JsonContentTrait;    protected function loadContentType()    {        $this->typeLabel = 'Emagramm Image';        $this->typeId = '92f8d854-e7db-4ba2-9037-1b859e4310cb';        $this->viewClassList[] = EmagrammContentView::class;        $this->formClassList[] = ContentSearchForm::class;    }    protected function onDataRow()    {        $emagrammReader = new EmagrammReader();        $emagrammReader->model->loadLocation();        $this->dataRow = $emagrammReader->getRowById($this->dataId);    }    /**     * @return AbstractModelDataRow|EmagrammRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        $emagrammRow = $this->getDataRow();        $subject = $emagrammRow->location->location . ' ' . $emagrammRow->dateTime->getShortDateTimeFormat();        return $subject;    }    public function getDateTime()    {        return $this->getDataRow()->dateTime;    }    public function getData()    {        $dataRow = $this->getDataRow();        $data = [];        $data['id'] = $dataRow->id;        $data['image_url'] = $dataRow->image->getUrl();        return $data;    }}