<?phpnamespace Nemundo\Meteo\Eumetsat\Install;use Nemundo\App\Application\Setup\ApplicationSetup;use Nemundo\App\Application\Type\Install\AbstractInstall;use Nemundo\Content\App\ImageTimeline\Application\ImageTimelineApplication;use Nemundo\Content\App\ImageTimeline\Content\ImageTimeline\ImageTimelineContentType;use Nemundo\Meteo\Eumetsat\Application\EumetsatApplication;class EumetsatInstall extends AbstractInstall{    public function install()    {        (new ImageTimelineApplication())->installApp();        (new ApplicationSetup())            ->addApplication(new EumetsatApplication());        // all images        //https://eumetview.eumetsat.int/static-images/latestImages/        $this->addImageTimeline('Airmass Central Europe', 'EUMETSAT_MSG_RGBAirmass_CentralEurope.jpg');        $this->addImageTimeline('Infrared Europe', 'EUMETSAT_MSGIODC_IR108_Europe.jpg');        //https://eumetview.eumetsat.int/static-images/latestImages/EUMETSAT_MSGIODC_IR108_Europe.jpg        //https://eumetview.eumetsat.int/static-images/latestImages/EUMETSAT_MSG_RGBAirmass_CentralEurope.jpg        /*        (new ModelCollectionSetup())            ->addCollection(new EumetsatCollection());        (new CmsSetup(new EumetsatApplication()))            ->addContentType(new EumetsatLatestContentType());        $region = new \ReflectionClass(RegionType::class);        //(new Debug())->write($region->getConstants());        foreach ($region->getConstants() as $key => $value) {            $data = new Region();            $data->ignoreIfExists = true;            $data->regionName = $key;            $data->region = $value;            $data->save();        }        foreach ((new \ReflectionClass(ImageType::class))->getConstants() as $key => $value) {            $data=new \Nemundo\Meteo\Eumetsat\Data\ImageType\ImageType();            $data->updateOnDuplicate=true;            $data->imageTypeName=$key;            $data->imageType=$value;            $data->save();        }*/    }    private function addImageTimeline($label, $filename)    {        $type = new ImageTimelineContentType();        $type->timeline = $label;   // $type;        $type->imageUrl = 'https://eumetview.eumetsat.int/static-images/latestImages/' . $filename;  // 'https://api.sat24.com/mostrecent/'.$continent.'/'.$name;  //    $mapUrl;        $type->source = 'Eumetsat';        $type->sourceUrl = 'https://eumetview.eumetsat.int';        $type->saveType();    }}