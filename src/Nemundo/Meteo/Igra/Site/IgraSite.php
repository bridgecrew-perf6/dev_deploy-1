<?phpnamespace Nemundo\Meteo\Igra\Site;use Nemundo\Admin\Com\Table\AdminClickableTable;use Nemundo\Com\FormBuilder\SearchForm;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Dev\App\Factory\DefaultTemplateFactory;use Nemundo\Meteo\Igra\Com\ListBox\CountryListBox;use Nemundo\Meteo\Igra\Data\Station\StationPaginationReader;use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;use Nemundo\Package\Bootstrap\Pagination\BootstrapPagination;use Nemundo\Package\Bootstrap\Table\BootstrapClickableTableRow;use Nemundo\Process\Config\ProcessConfig;use Nemundo\Web\Site\AbstractSite;class IgraSite extends AbstractSite{    protected function loadSite()    {        $this->title = 'Integrated Global Radiosonde Archive (IGRA)';        $this->url = 'igra';    }    public function loadContent()    {        $page = (new DefaultTemplateFactory())->getDefaultTemplate();        $form = new SearchForm($page);        $formRow = new BootstrapRow($form);        $country = new CountryListBox($formRow);        $country->submitOnChange = true;        $country->searchMode = true;        $table = new AdminClickableTable($page);        $stationReader = new StationPaginationReader();        $stationReader->model->loadCountry();        if ($country->hasValue()) {            $stationReader->filter->andEqual($stationReader->model->countryId, $country->getValue());        }        $stationReader->addOrder($stationReader->model->station);        $stationReader->paginationLimit = ProcessConfig::PAGINATION_LIMIT;        $header = new TableHeader($table);        $header->addText($stationReader->model->identificationCode->label);        $header->addText($stationReader->model->station->label);        $header->addText($stationReader->model->country->label);        $header->addText('Operation');        foreach ($stationReader->getData() as $stationRow) {            $row = new BootstrapClickableTableRow($table);            $row->addText($stationRow->identificationCode);            $row->addText($stationRow->station);            $row->addText($stationRow->country->country);            $row->addText($stationRow->yearFrom . '-' . $stationRow->yearTo);        }        $pagination = new BootstrapPagination($page);        $pagination->paginationReader = $stationReader;        $page->render();    }}