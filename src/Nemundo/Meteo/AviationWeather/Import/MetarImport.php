<?phpnamespace Nemundo\Meteo\AviationWeather\Import;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\Csv\CsvSeperator;use Nemundo\Core\Csv\Reader\CsvReader;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Type\Geo\GeoCoordinate;use Nemundo\Core\WebRequest\CurlWebRequest;use Nemundo\Meteo\AviationWeather\Data\Metar\Metar;use Nemundo\Meteo\AviationWeather\DataList\MetarStationDataList;use Nemundo\Meteo\Metar\MetarDecoder;use Nemundo\Project\Path\TmpPath;class MetarImport extends AbstractBase{    public function importMetar()    {        $url = 'https://www.aviationweather.gov/adds/dataserver_current/current/metars.cache.csv';        $filename = (new TmpPath())            ->addPath('metars.csv')            ->getFullFilename();        /*$filename = (new TmpPath())            ->addPath('test.csv')            ->getFullFilename();*/        $metarStationDataList = new MetarStationDataList();        (new CurlWebRequest())->downloadUrl($url, $filename);//        station_id	observation_time	latitude	longitude	temp_c	dewpoint_c	wind_dir_degrees	wind_speed_kt	wind_gust_kt	visibility_statute_mi	altim_in_hg	sea_level_pressure_mb        $csvReader = new CsvReader();        $csvReader->filename = $filename;        $csvReader->separator = CsvSeperator::COMMA;        $csvReader->lineOfStart = 5;        foreach ($csvReader->getData() as $csvRow) {            //(new Debug())->write($csvRow);            // latitude,longitude            $coordinate = new GeoCoordinate();            $coordinate->latitude = $csvRow->getValue('latitude');            $coordinate->longitude = $csvRow->getValue('longitude');            $metarStationDataList->coordinate = $coordinate;            $stationId = $metarStationDataList->getId($csvRow->getValue('station_id'));            //(new Debug())->write($stationId);            $metar = new MetarDecoder($csvRow->getValue('raw_text'));            //(new Debug())->write($metar->qnh);            $temperature = $csvRow->getValue('temp_c');            $qnh = $csvRow->getValue('sea_level_pressure_mb');            $data = new Metar();            $data->stationId = $stationId;            $data->metarRaw=$metar->metarRaw;            $data->hasTemperature = false;            if ($temperature !== '') {                $data->hasTemperature = true;                $data->temperature = $temperature;            }            /*$data->hasQnh = false;            if ($qnh !== '') {                $data->hasQnh = true;                $data->qnh = $qnh;            }*/            $data->hasQnh = $metar->hasQnh();  // false;            if ($metar->hasQnh()) {   //qnh !== '') {                //$data->hasQnh = true;                $data->qnh = $metar->qnh;            }            $data->save();            // sea_level_pressure_mb            //(new Debug())->write($csvRow->getValue('station_id'));            //exit;        }    }}