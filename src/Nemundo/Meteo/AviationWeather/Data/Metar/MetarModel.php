<?phpnamespace Nemundo\Meteo\AviationWeather\Data\Metar;class MetarModel extends \Nemundo\Model\Definition\Model\AbstractModel {/*** @var \Nemundo\Model\Type\Id\IdType*/public $id;/*** @var \Nemundo\Model\Type\External\Id\ExternalIdType*/public $stationId;/*** @var \Nemundo\Meteo\AviationWeather\Data\MetarStation\MetarStationExternalType*/public $station;/*** @var \Nemundo\Model\Type\Number\YesNoType*/public $hasQnh;/*** @var \Nemundo\Model\Type\Number\DecimalNumberType*/public $qnh;/*** @var \Nemundo\Model\Type\Number\YesNoType*/public $hasTemperature;/*** @var \Nemundo\Model\Type\Number\DecimalNumberType*/public $temperature;/*** @var \Nemundo\Model\Type\Text\LargeTextType*/public $metarRaw;protected function loadModel() {$this->tableName = "aviationweather_metar";$this->aliasTableName = "aviationweather_metar";$this->label = "Metar";$this->primaryIndex = new \Nemundo\Db\Index\AutoIncrementIdPrimaryIndex();$this->id = new \Nemundo\Model\Type\Id\IdType($this);$this->id->tableName = "aviationweather_metar";$this->id->externalTableName = "aviationweather_metar";$this->id->fieldName = "id";$this->id->aliasFieldName = "aviationweather_metar_id";$this->id->label = "Id";$this->id->allowNullValue = false;$this->stationId = new \Nemundo\Model\Type\External\Id\ExternalIdType($this);$this->stationId->tableName = "aviationweather_metar";$this->stationId->fieldName = "station";$this->stationId->aliasFieldName = "aviationweather_metar_station";$this->stationId->label = "Station";$this->stationId->allowNullValue = false;$this->hasQnh = new \Nemundo\Model\Type\Number\YesNoType($this);$this->hasQnh->tableName = "aviationweather_metar";$this->hasQnh->externalTableName = "aviationweather_metar";$this->hasQnh->fieldName = "has_qnh";$this->hasQnh->aliasFieldName = "aviationweather_metar_has_qnh";$this->hasQnh->label = "Has Qnh";$this->hasQnh->allowNullValue = false;$this->qnh = new \Nemundo\Model\Type\Number\DecimalNumberType($this);$this->qnh->tableName = "aviationweather_metar";$this->qnh->externalTableName = "aviationweather_metar";$this->qnh->fieldName = "qnh";$this->qnh->aliasFieldName = "aviationweather_metar_qnh";$this->qnh->label = "Qnh";$this->qnh->allowNullValue = true;$this->hasTemperature = new \Nemundo\Model\Type\Number\YesNoType($this);$this->hasTemperature->tableName = "aviationweather_metar";$this->hasTemperature->externalTableName = "aviationweather_metar";$this->hasTemperature->fieldName = "has_temperature";$this->hasTemperature->aliasFieldName = "aviationweather_metar_has_temperature";$this->hasTemperature->label = "Has Temperature";$this->hasTemperature->allowNullValue = false;$this->temperature = new \Nemundo\Model\Type\Number\DecimalNumberType($this);$this->temperature->tableName = "aviationweather_metar";$this->temperature->externalTableName = "aviationweather_metar";$this->temperature->fieldName = "temperature";$this->temperature->aliasFieldName = "aviationweather_metar_temperature";$this->temperature->label = "Temperature";$this->temperature->allowNullValue = true;$this->metarRaw = new \Nemundo\Model\Type\Text\LargeTextType($this);$this->metarRaw->tableName = "aviationweather_metar";$this->metarRaw->externalTableName = "aviationweather_metar";$this->metarRaw->fieldName = "metar_raw";$this->metarRaw->aliasFieldName = "aviationweather_metar_metar_raw";$this->metarRaw->label = "Metar Raw";$this->metarRaw->allowNullValue = false;}public function loadStation() {if ($this->station == null) {$this->station = new \Nemundo\Meteo\AviationWeather\Data\MetarStation\MetarStationExternalType($this, "aviationweather_metar_station");$this->station->tableName = "aviationweather_metar";$this->station->fieldName = "station";$this->station->aliasFieldName = "aviationweather_metar_station";$this->station->label = "Station";}return $this;}}