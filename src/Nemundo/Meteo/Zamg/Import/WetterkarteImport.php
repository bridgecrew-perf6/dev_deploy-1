<?phpnamespace Nemundo\Meteo\Zamg\Import;use Nemundo\Content\App\ImageTimeline\Content\Image\ImageContentImport;use Nemundo\Content\App\ImageTimeline\Content\Image\ImageContentType;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\Date\DayReader;use Nemundo\Core\Http\Response\StatusCode;use Nemundo\Core\System\Delay;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Core\WebRequest\WebRequest;use Nemundo\Meteo\Zamg\Content\ZamgWetterkarte\ZamgWetterkarteContentType;use Nemundo\Meteo\Zamg\Data\Wetterkarte\WetterkarteCount;use Nemundo\Meteo\Zamg\ImageTimeline\ZamgImageTimeline;use Nemundo\Meteo\Zamg\Reader\ZamgWetterkarteReader;class WetterkarteImport extends AbstractBase{    /**     * @var Date     */    public $dateFrom;    /**     * @var Date     */    public $dateTo;    public function importWetterkarte()    {        $dataId = (new ZamgImageTimeline())->saveType()->getDataId();        $dayReader = new DayReader();        $dayReader->dateFrom = $this->dateFrom;        $dayReader->dateTo = $this->dateTo;        foreach ($dayReader->getData() as $date) {            $reader = new ZamgWetterkarteReader();            $reader->dateFrom = $date;            $reader->dateTo = $date;            foreach ($reader->getData() as $item) {                if ((new WebRequest())->getResponseCode($item->imageUrl) == StatusCode::OK) {                    $import = new ImageContentImport();  //Type();                    $import->timelineId = $dataId;                    $import->imageUrl = $item->imageUrl;                    $import->dateTime = $item->dateTime;                    $import->importContent();  //saveType();                }                /*                $count = new WetterkarteCount();                $count->filter->andEqual($count->model->dateTime, $item->dateTime->getIsoDateTimeFormat());                if ($count->getCount() === 0) {                    if ((new WebRequest())->getResponseCode($item->imageUrl) == StatusCode::OK) {                        $type = new ZamgWetterkarteContentType();                        $type->dateTime = $item->dateTime;                        $type->imageUrl = $item->imageUrl;                        $type->saveType();                        (new Delay())->delay(1);                    }                }*/            }        }    }}