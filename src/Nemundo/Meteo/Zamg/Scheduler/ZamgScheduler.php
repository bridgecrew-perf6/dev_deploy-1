<?phpnamespace Nemundo\Meteo\Zamg\Scheduler;use Nemundo\App\Scheduler\Job\AbstractScheduler;use Nemundo\Core\Date\DayReader;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Http\Response\StatusCode;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Core\WebRequest\WebRequest;use Nemundo\Meteo\Zamg\Data\Wetterkarte\Wetterkarte;use Nemundo\Meteo\Zamg\Data\Wetterkarte\WetterkarteCount;use Nemundo\Meteo\Zamg\Data\Wetterkarte\WetterkarteDelete;use Nemundo\Meteo\Zamg\Import\WetterkarteImport;use Nemundo\Meteo\Zamg\Reader\ZamgWetterkarteReader;class ZamgScheduler extends AbstractScheduler{    protected function loadScheduler()    {        // TODO: Implement loadScheduler() method.        $this->active= true;        $this->hour= 2;        $this->consoleScript=true;        $this->scriptName='zamg-latest';    }    public function run()    {        // TODO: Implement run() method.        //(new WetterkarteDelete())->delete();        $import=new WetterkarteImport();        $import->dateFrom = (new Date())->setNow()->minusDay(3);        $import->dateTo = (new Date())->setNow();        $import->importWetterkarte();        /*        $dayReader = new DayReader();        $dayReader->dateFrom = new Date('2020-02-01');  // (new Date())->setNow()->minusDay(3);        $dayReader->dateTo =new Date('2020-02-31'); // (new Date())->setNow();        foreach ($dayReader->getData() as $date) {            $reader = new ZamgWetterkarteReader();            $reader->dateFrom = new Date();            $reader->dateTo = new Date();            foreach ($reader->getData() as $item) {                $count=new WetterkarteCount();                $count->filter->andEqual($count->model->dateTime,$item->dateTime->getIsoDateTimeFormat());                if ($count->getCount() === 0) {                    //$filename = (new ZamgCachePath())->addPath($item->dateTime->getIsoDateFormat() . '_' . $item->dateTime->getHour() . '.png')->getFilename();               /*if ((new File($filename))->notExists()) {                   (new WebRequest())->downloadUrl($item->imageUrl, $filename);               }*/                    //(new Debug())->write($item->imageUrl);          /*          if ((new WebRequest())->getResponseCode($item->imageUrl) == StatusCode::OK) {                        $data=new Wetterkarte();                        $data->dateTime= $item->dateTime;                        $data->image->fromUrl($item->imageUrl);                        $data->save();                    }                }                /*$filename = (new ZamgCachePath())->addPath($item->dateTime->getIsoDateFormat() . '_' . $item->dateTime->getHour() . '.png')->getFilename();                if ((new File($filename))->notExists()) {                    (new WebRequest())->downloadUrl($item->imageUrl, $filename);                }*/         //   }        //}    }}