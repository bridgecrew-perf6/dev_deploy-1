<?phpnamespace Nemundo\Meteo\Zamg\Content\ZamgWetterkarte;use Nemundo\Content\App\Timeline\Index\TimelineIndexTrait;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Core\Type\DateTime\DateTime;use Nemundo\Meteo\Zamg\Data\Wetterkarte\Wetterkarte;use Nemundo\Meteo\Zamg\Data\Wetterkarte\WetterkarteCount;use Nemundo\Meteo\Zamg\Data\Wetterkarte\WetterkarteReader;use Nemundo\Meteo\Zamg\Data\Wetterkarte\WetterkarteRow;class ZamgWetterkarteContentType extends AbstractContentType{    use TimelineIndexTrait;    /**     * @var DateTime     */    public $dateTime;    public $imageUrl;    protected function loadContentType()    {        $this->typeLabel = 'Zamg Wetterkarte';        $this->typeId = '501f576f-9814-48eb-8a7f-93c200494861';        $this->viewClassList[]  = ZamgWetterkarteContentView::class;    }    protected function onCreate()    {        /*$data = new ZamgWetterkarte();        $data->date = $this->date;        $this->dataId = $data->save();*/        $data=new Wetterkarte();        $data->dateTime= $this->dateTime;        //$data->date=$item->dateTime->getDate();        $data->image->fromUrl($this->imageUrl);        $this->dataId = $data->save();    }    protected function onUpdate()    {    }    protected function onIndex()    {        $this->saveTimeline();    }    protected function onDataRow()    {        $this->dataRow = (new WetterkarteReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|WetterkarteRow     */    public function getDataRow()    {        return parent::getDataRow();    }    /*    public function existItem()    {        $value=false;        $count=new WetterkarteCount();        $count->filter->andEqual($count->model->dateTime,$this->dateTime);        if ($count->getCount() == 1) {            $value=true;        }        /*        foreach ($count->getData() as $wetterkarteRow) {            $value=true;        }*/     /*   return $value;        //$data->dateTime= $this->dateTime;        //return parent::existItem(); // TODO: Change the autogenerated stub    }*/    public function getSubject()    {        $subject = 'ZAMG Wetterkarte von ' . $this->getDataRow()->dateTime->getShortDateTimeLeadingZeroFormat();        return $subject;    }    public function getDateTime()    {        return $this->getDataRow()->dateTime;        //return $subject;    }}