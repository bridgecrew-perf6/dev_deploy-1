<?phpnamespace Nemundo\Meteo\MeteoschweizAllgemeineLage\Content\AllgemeineLage;use Nemundo\Content\App\Timeline\Index\TimelineIndexTrait;use Nemundo\Content\Index\Tree\Com\Form\ContentSearchForm;use Nemundo\Content\Type\AbstractSearchContentType;use Nemundo\Content\View\Listing\ContentListing;use Nemundo\Core\Type\DateTime\DateTime;use Nemundo\Meteo\MeteoschweizAllgemeineLage\Data\AllgemeineLage\AllgemeineLage;use Nemundo\Meteo\MeteoschweizAllgemeineLage\Data\AllgemeineLage\AllgemeineLageCount;use Nemundo\Meteo\MeteoschweizAllgemeineLage\Data\AllgemeineLage\AllgemeineLageDelete;use Nemundo\Meteo\MeteoschweizAllgemeineLage\Data\AllgemeineLage\AllgemeineLageId;use Nemundo\Meteo\MeteoschweizAllgemeineLage\Data\AllgemeineLage\AllgemeineLageReader;use Nemundo\Meteo\MeteoschweizAllgemeineLage\Data\AllgemeineLage\AllgemeineLageRow;class AllgemeineLageContentType extends AbstractSearchContentType{    use TimelineIndexTrait;    public $datumText;    /**     * @var DateTime     */    public $datum;    public $allgemeineLage;    protected function loadContentType()    {        $this->typeLabel = 'Meteoschweiz - Allgmeine Lage (Text)';        $this->typeId = 'abf8fff0-2db5-41bb-b2ca-d654241b6162';        $this->formClassList[] = ContentSearchForm::class;        $this->viewClassList[] = AllgemeineLageContentView::class;        $this->listingClass = ContentListing::class;    }    protected function onCreate()    {        $data = new AllgemeineLage();        $data->datumText = $this->datumText;        $data->datum = $this->datum;        $data->allgemeineLage = $this->allgemeineLage;        $this->dataId = $data->save();    }    protected function onUpdate()    {    }    protected function onIndex()    {        $this->saveTimeline();        $allgemeineLageRow = $this->getDataRow();        $this->addSearchText($allgemeineLageRow->allgemeineLage);    }    protected function onDelete()    {        $this->deleteSearchIndex();        $this->deleteTimeline();        (new AllgemeineLageDelete())->deleteById($this->dataId);    }    protected function onDataRow()    {        $this->dataRow = (new AllgemeineLageReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|AllgemeineLageRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        $subject = 'Allgemeine Lage von ' . $this->getDataRow()->datumText;        return $subject;    }    public function getDateTime()    {        return $this->getDataRow()->datum;    }    public function getText()    {        $text = $this->getDataRow()->allgemeineLage;        return $text;    }    public function existItem()    {        $value = false;        $count = new AllgemeineLageCount();        $count->filter->andEqual($count->model->datumText, $this->datumText);        if ($count->getCount() > 0) {            $value = true;            $id = new AllgemeineLageId();            $id->filter->andEqual($count->model->datumText, $this->datumText);            $this->dataId = $id->getId();        }        return $value;    }}