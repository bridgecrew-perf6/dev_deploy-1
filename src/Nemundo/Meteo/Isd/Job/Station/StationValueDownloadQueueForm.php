<?phpnamespace Nemundo\Meteo\Isd\Job\Station;use Nemundo\Content\App\Job\Index\JobIndexBuilder;use Nemundo\Content\Form\AbstractContentForm;use Nemundo\Core\Structure\ForLoop;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Meteo\Isd\Com\ListBox\StationAutocompleteListBox;use Nemundo\Meteo\Isd\Com\ListBox\YearListBox;use Nemundo\Meteo\Isd\Data\DownloadQueue\DownloadQueue;use Nemundo\Meteo\Isd\Job\Station\StationValueDownloadJob;use Nemundo\Package\Bootstrap\Form\BootstrapForm;class StationValueDownloadQueueForm extends AbstractContentForm  // BootstrapForm{    /**     * @var StationAutocompleteListBox     */    private $station;    /**     * @var YearListBox     */    private $yearFrom;    /**     * @var YearListBox     */    private $yearTo;    public function getContent()    {        $this->station = new StationAutocompleteListBox($this);        $this->yearFrom = new YearListBox($this);        $this->yearFrom->label = 'From';        $this->yearFrom->validation = true;        $this->yearFrom->value=(new Date())->setNow()->getYear();        $this->yearTo = new YearListBox($this);        $this->yearTo->label = 'To';        $this->yearTo->validation = true;        $this->yearTo->value=(new Date())->setNow()->getYear();        return parent::getContent();    }    protected function onSubmit()    {        $stationRow = $this->station->getStationRow();        $loop = new ForLoop();        $loop->minNumber = $this->yearFrom->getValue();        $loop->maxNumber = $this->yearTo->getValue();        foreach ($loop->getData() as $year) {            $data = new DownloadQueue();            $data->ignoreIfExists = true;            $data->stationId = $stationRow->id;            $data->year = $year;            $data->finished = false;            $dataId=$data->save();            (new JobIndexBuilder(new StationValueDownloadJob($dataId)))->buildIndex();        }    }}