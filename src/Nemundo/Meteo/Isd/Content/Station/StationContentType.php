<?phpnamespace Nemundo\Meteo\Isd\Content\Station;use Nemundo\Content\Index\Geo\Type\GeoIndexTrait;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Core\Type\Geo\GeoCoordinateAltitude;use Nemundo\Meteo\Isd\Data\Station\Station;use Nemundo\Meteo\Isd\Data\Station\StationCount;use Nemundo\Meteo\Isd\Data\Station\StationDelete;use Nemundo\Meteo\Isd\Data\Station\StationId;use Nemundo\Meteo\Isd\Data\Station\StationReader;use Nemundo\Meteo\Isd\Data\Station\StationRow;class StationContentType extends AbstractContentType{    use GeoIndexTrait;    /*public $station;    public $stationCode;    public $countryId;    /**     * @var Date     */    //public $validFrom;    /**     * @var Date     */    //public $validTo;    /**     * @var GeoCoordinateAltitude     */    //public $geoCoordinate;    protected function loadContentType()    {        $this->typeLabel = 'Isd Station';        $this->typeId = '02311250-44bf-4a7b-a16b-68f0f24aadb7';        $this->viewClassList[]  = StationContentView::class;        //$this->geoCoordinate = new GeoCoordinateAltitude();    }    /*    public function existItem()    {        $exists = false;        $count = new StationCount();        $count->filter->andEqual($count->model->stationCode, $this->stationCode);        if ($count->getCount() > 0) {            $exists = true;            $id = new StationId();            $id->filter->andEqual($id->model->stationCode, $this->stationCode);            $this->dataId = $id->getId();        }        return $exists;    }    protected function onCreate()    {        $data = new Station();        $data->active = false;        $data->stationCode = $this->stationCode;        $data->station = $this->station;        $data->coordinate = $this->geoCoordinate;        $data->countryId = $this->countryId;        $data->validFrom = $this->validFrom;        $data->validTo = $this->validTo;        $this->dataId = $data->save();    }    protected function onUpdate()    {    }*/    protected function onDelete()    {        (new StationDelete())->deleteById($this->dataId);    }    protected function onIndex()    {        /*$this->addSearchWord($this->getDataRow()->station);        $this->addSearchWord($this->getDataRow()->stationCode);*/        //$this->saveGeoIndex();    }    protected function onDataRow()    {        $this->dataRow = (new StationReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|StationRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getCoordinate()    {        return $this->getDataRow()->coordinate;    }    public function getSubject()    {        return $this->getDataRow()->station;    }    public function getPlace()    {        return $this->getDataRow()->station;    }}