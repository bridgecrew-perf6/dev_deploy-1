<?phpnamespace Nemundo\Meteo\Isd\Page;use Nemundo\Admin\Com\Button\AdminSearchButton;use Nemundo\Admin\Com\Button\AdminSiteButton;use Nemundo\Admin\Com\Table\AdminClickableTable;use Nemundo\Com\FormBuilder\SearchForm;use Nemundo\Com\Html\Hyperlink\SiteHyperlink;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Meteo\Isd\Com\Chart\Day\TemperatureDayChart;use Nemundo\Meteo\Isd\Com\Chart\Day\WindDirectionDayChart;use Nemundo\Meteo\Isd\Com\Chart\Day\WindMaxDayChart;use Nemundo\Meteo\Isd\Com\Chart\Hour\TemperatureDewPointHourChart;use Nemundo\Meteo\Isd\Com\Chart\Hour\TemperatureHourChart;use Nemundo\Meteo\Isd\Com\Chart\Hour\WindDirectionHourChart;use Nemundo\Meteo\Isd\Com\Chart\Hour\WindHourChart;use Nemundo\Meteo\Isd\Com\ListBox\CountryListBox;use Nemundo\Meteo\Isd\Com\ListBox\StationAutocompleteListBox;use Nemundo\Meteo\Isd\Data\Station\StationPaginationReader;use Nemundo\Meteo\Isd\Parameter\ActiveParameter;use Nemundo\Meteo\Isd\Parameter\CountryParameter;use Nemundo\Meteo\Isd\Parameter\StationParameter;use Nemundo\Meteo\Isd\Site\IsdSite;use Nemundo\Meteo\Isd\Site\SaveDownloadQueueSite;use Nemundo\Meteo\Isd\Site\StationItemSite;use Nemundo\Meteo\Isd\Site\Kml\StationKmlSite;use Nemundo\Meteo\Isd\Template\IsdTemplate;use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;use Nemundo\Package\Bootstrap\FormElement\BootstrapCheckBox;use Nemundo\Package\Bootstrap\FormElement\BootstrapFromToDatePicker;use Nemundo\Package\Bootstrap\FormElement\BootstrapTextBox;use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;use Nemundo\Package\Bootstrap\Pagination\BootstrapPagination;use Nemundo\Package\Bootstrap\Table\BootstrapClickableTableRow;class IsdPage extends IsdTemplate{    public function getContent()    {        $layout = new BootstrapTwoColumnLayout($this);        $form = new SearchForm($layout->col1);        $formRow = new BootstrapRow($form);        /*$stationCode = new BootstrapTextBox($formRow);        $stationCode->label = 'Station Code';        $stationCode->searchMode = true;*/        $country = new CountryListBox($formRow);        $country->submitOnChange = true;        $country->searchMode = true;        $active=new BootstrapCheckBox($formRow);        $active->name=(new ActiveParameter())->getParameterName();        $active->searchMode=true;        $active->submitOnChange=true;        $active->value=true;        $active->label='Only Active Station';        $station = new StationAutocompleteListBox($formRow);        $station->searchMode = true;        $dateFromTo=new BootstrapFromToDatePicker($formRow);        $dateFromTo->searchMode=true;        new AdminSearchButton($formRow);        $btn = new AdminSiteButton($layout->col1);        $btn->site = clone(StationKmlSite::$site);        $btn->site->addParameter(new CountryParameter());        $btn->site->addParameter(new ActiveParameter());        $stationReader = new StationPaginationReader();        $stationReader->model->loadCountry();        //$stationReader->filter->andEqual($stationReader->model->active, true);        $stationReader->filter->andEqual($stationReader->model->active, $active->getValue());        if ($country->hasValue()) {            $stationReader->filter->andEqual($stationReader->model->countryId, $country->getValue());        }        /*if ($stationCode->hasValue()) {            $stationReader->filter->andEqual($stationReader->model->stationCode, $stationCode->getValue());        }*/        if ($station->hasValue()) {            $stationReader->filter->andEqual($stationReader->model->station, $station->getValue());        }        //$stationReader->addOrder($stationReader->model->station);        $stationReader->addOrder($stationReader->model->validFrom);        $table = new AdminClickableTable($layout->col1);        $header = new TableHeader($table);        $header->addText($stationReader->model->active->label);        $header->addText($stationReader->model->station->label);        $header->addText($stationReader->model->stationCode->label);        $header->addText($stationReader->model->country->label);        $header->addText($stationReader->model->validFrom->label);        $header->addText($stationReader->model->validTo->label);        foreach ($stationReader->getData() as $stationRow) {            $row = new BootstrapClickableTableRow($table);            $row->addYesNo($stationRow->active);            $row->addText($stationRow->station);            $row->addText($stationRow->stationCode);            $row->addText($stationRow->country->country);            $row->addText($stationRow->validFrom->getShortDateLeadingZeroFormat());            $row->addText($stationRow->validTo->getShortDateLeadingZeroFormat());            //$form=new DownloadQueueForm($row);            //$form->stationId=$stationRow->id;            /*$site = clone(SaveDownloadQueueSite::$site);            $site->addParameter(new StationParameter($stationRow->id));            $site->addParameter(new CountryParameter());            $row->addIconSite($site);*/            $site = clone(IsdSite::$site);  // clone(StationItemSite::$site);            $site->addParameter(new StationParameter($stationRow->id));            $site->addParameter(new CountryParameter());            $row->addClickableSite($site);        }        $pagination = new BootstrapPagination($this);        $pagination->paginationReader = $stationReader;        $stationParameter = new StationParameter();        if ($stationParameter->hasValue()) {            $stationRow =$stationParameter->getStationRow();            $chart = new WindMaxDayChart($layout->col2);            $chart->dateFrom = $dateFromTo->getDateFrom();            $chart->dateTo = $dateFromTo->getDateTo();            $chart->addStationRow($stationRow);            $chart = new WindDirectionDayChart($layout->col2);            $chart->dateFrom = $dateFromTo->getDateFrom();            $chart->dateTo = $dateFromTo->getDateTo();            $chart->addStationRow($stationRow);            /*$chart =new WindDirectionHourChart($this);            $chart->dateFrom =$dateFromTo->getDateFrom();            $chart->dateTo = $dateFromTo->getDateTo();            $chart->addStationRow($stationRow);*/            $chart = new TemperatureDayChart($layout->col2);            $chart->dateFrom = $dateFromTo->getDateFrom();            $chart->dateTo = $dateFromTo->getDateTo();            $chart->addStationRow($stationRow);            /*            $chart = new TemperatureDayChart($layout->col2);            $chart->dateFrom = $dateFromTo->getDateFrom();            $chart->dateTo = $dateFromTo->getDateTo();            $chart->addStationRow($stationRow);*/            $site = clone(StationItemSite::$site);            $site->addParameter($stationParameter);            $hyperlink=new SiteHyperlink($layout->col2);            $hyperlink->site=$site;        }        return parent::getContent();    }}