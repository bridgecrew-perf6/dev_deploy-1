<?phpnamespace Nemundo\Admin\Com\Navbar;namespace Nemundo\Admin\Com\Navbar;use Nemundo\App\UserAction\Site\LogoutSite;use Nemundo\App\UserAction\Site\PasswordChangeSite;use Nemundo\Com\Html\Hyperlink\SiteHyperlink;use Nemundo\Html\Hyperlink\Hyperlink;use Nemundo\Html\Listing\Li;use Nemundo\Html\Listing\Ul;use Nemundo\Package\Bootstrap\Autocomplete\AbstractAutocompleteJsonSite;use Nemundo\Package\Bootstrap\BootstrapConfig;use Nemundo\Package\Bootstrap\Navbar\BootstrapNavbarBrand;use Nemundo\Package\Bootstrap\Navbar\BootstrapNavbarLogo;use Nemundo\Package\Bootstrap\Navbar\BootstrapNavbarSearchForm;use Nemundo\Package\Bootstrap\Navbar\BootstrapNavbarToggler;use Nemundo\Package\Bootstrap\Navbar\BootstrapSiteNavbar;use Nemundo\Web\Site\AbstractSite;use Nemundo\Web\Site\BaseUrlSite;// ContentSiteNavbar// ContentAppSiteNavbar// AdminNavbarclass AdminSiteNav extends  BootstrapSiteNavbar{    public $logoUrl;    public $brand = 'Home';    /**     * @var bool     */    public $searchMode = false;    /**     * @var AbstractSite     */    //public $searchSite;    /**     * @var AbstractAutocompleteJsonSite     */    //public $searchSourceSite;    /**     * @var bool     */    public $showPasswordChange = true;    public function getContent()    {        foreach ($this->site->getMenuActiveSite() as $site) {            $li = new Li($this->navbarNavUl);            $li->addCssClass('nav-item');            if ($site->hasItems()) {                $li->addCssClass('dropdown');            }            if ($site->hasItems()) {                $menuActive = false;                foreach ($site->getMenuActiveSite() as $subSite) {                    if ($subSite->menuActive) {                        $menuActive = true;                    }                }                if ($menuActive) {                    $hyperlink = new Hyperlink($li);                    $hyperlink->addCssClass('nav-link');                    $hyperlink->content = $site->title;                    $hyperlink->href = '#';                    $hyperlink->id = 'navbarDropdown2';                    $hyperlink->addCssClass('dropdown-toggle');                    //$hyperlink->addAttribute('data-bs-toggle', 'dropdown');                    //$hyperlink->addAttribute('data-mdb-toggle', 'dropdown');                    $hyperlink->addAttribute('data-'.BootstrapConfig::$dataPrefix.'-toggle', 'dropdown');                    $hyperlink->addAttribute('aria-expanded', 'false');                    $hyperlink->addAttribute('role', 'button');                    $ul = new Ul($li);                    $ul->addAttribute('aria-labelledby', 'navbarDropdown2');                    $ul->addCssClass('dropdown-menu');                    foreach ($site->getMenuActiveSite() as $subSite) {                        if ($subSite->menuActive) {                            $li = new Li($ul);                            $subHyperlink = new SiteHyperlink($li);                            $subHyperlink->addCssClass('dropdown-item');                            $subHyperlink->content = $subSite->title;                            $subHyperlink->site = $subSite;                        }                    }                } else {                    $hyperlink = new SiteHyperlink($li);                    $hyperlink->addCssClass('nav-link');                    $hyperlink->content = $site->title;                    $hyperlink->site = $site;                }            } else {                $hyperlink = new SiteHyperlink($li);                $hyperlink->addCssClass('nav-link');                $hyperlink->content = $site->title;                $hyperlink->site = $site;            }        }        /*        if ($this->logoUrl !== null) {            $logo = new BootstrapNavbarLogo();            $logo->logoSite = new BaseUrlSite();            $logo->logoUrl = $this->logoUrl;            $this->containerDiv->addContainerAtFirst($logo);        } else {            $brand = new BootstrapNavbarBrand();            $brand->content = $this->brand;            $this->containerDiv->addContainerAtFirst($brand);        }        $toggler = new BootstrapNavbarToggler();        $this->containerDiv->addContainerAtFirst($toggler);        if ($this->searchMode) {            $search = new BootstrapNavbarSearchForm($this);            $search->site = $this->searchSite;            $search->sourceSite = $this->searchSourceSite;        }        if ($this->userMode) {            if ($this->showPasswordChange) {                $this->addUserMenuSite(PasswordChangeSite::$site);                $this->addUserMenuDivider();            }            $this->addUserMenuSite(LogoutSite::$site);        }*/        return parent::getContent();    }}