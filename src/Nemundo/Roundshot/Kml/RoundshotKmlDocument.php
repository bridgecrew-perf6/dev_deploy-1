<?phpnamespace Nemundo\Roundshot\Kml;use Nemundo\Com\Html\Hyperlink\UrlHyperlink;use Nemundo\Core\Type\Text\Text;use Nemundo\Geo\Kml\Document\KmlDocument;use Nemundo\Geo\Kml\Object\KmlMarker;use Nemundo\Html\Container\HtmlContainer;use Nemundo\Roundshot\Data\Roundshot\RoundshotReader;class RoundshotKmlDocument extends KmlDocument{    public function render()    {        $this->filename = 'roundshot.kml';        //new RoundshotKmlFolder($this);        //$multi = new MultiGeometry($this);        $reader = new RoundshotReader();        foreach ($reader->getData() as $roundshotRow) {            $titleText = (new Text($roundshotRow->roundshot))->replace('&', '')->getValue();            //$titleText = $roundshotRow->title;            $description = new HtmlContainer();  // new HtmlContainerList();            //$title = new H3($description);            //$title->content = $titleText;            $link = new UrlHyperlink($description);            $link->url = $roundshotRow->url;            $link->content = $roundshotRow->roundshot;            $point = new KmlMarker($this);  // new Placemark($this);  // $this);  // new KmlPlacemark($this);            $point->coordinate = $roundshotRow->geoCoordinate;            $point->label = $titleText;            $point->description = $description->getBodyContent();            /*            $imageReader = new RoundshotImageReader();            $imageReader->filter->andEqual($imageReader->model->roundshotId, $roundshotRow->id);            $imageReader->addOrder($imageReader->model->dateTime, SortOrder::DESCENDING);            $imageReader->limit = 1;            foreach ($imageReader->getData() as $imageRow) {                $image = new Image($description);                $image->src = $imageRow->image->getImageUrlWithDomain($imageRow->model->imageFixWidth1200);                $image->width = 1200;                $p = new Paragraph($description);                $p->content = $imageRow->dateTime->getShortDateTimeLeadingZeroFormat();            }*/            /*  $point = new KmlMarker($this);  // new Placemark($this);  // $this);  // new KmlPlacemark($this);              $point->coordinate = $roundshotRow->coordinate;              $point->label = $titleText;              $point->description = $description->getContent();*/        }        parent::render();    }}