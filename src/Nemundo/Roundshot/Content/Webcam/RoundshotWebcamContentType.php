<?phpnamespace Nemundo\Roundshot\Content\Webcam;use Nemundo\Content\Index\Geo\Type\GeoIndexTrait;use Nemundo\Content\Index\Search\Type\SearchIndexTrait;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Content\Type\JsonContentTrait;use Nemundo\Roundshot\Data\Roundshot\RoundshotDelete;use Nemundo\Roundshot\Data\Roundshot\RoundshotReader;use Nemundo\Roundshot\Data\Roundshot\RoundshotRow;use Nemundo\Roundshot\Parameter\RoundshotParameter;class RoundshotWebcamContentType extends AbstractContentType{    use GeoIndexTrait;    //use SearchIndexTrait;    //use JsonContentTrait;    /* public $roundshotNumber;     public $roundshot;     public $url;     /**      * @var GeoCoordinateAltitude      */    // public $geoCoordinate;    protected function loadContentType()    {        $this->typeId = '4fa7169f-5498-4c56-80e8-9a7bf7dbed5d';        $this->typeLabel = 'Roundshot Webcam';        //$this->formClassList[] = RoundshotContentSearchForm::class;        $this->viewClassList[] = WebcamContentView::class;        /*$this->adminClass = RoundshotWebcamContentListing::class;        $this->listingClass = RoundshotWebcamContentListing::class;        $this->kmlContainerClass = RoundshotContentKmlMarker::class;        $this->parameterClass = RoundshotParameter::class;*/        //$this->geoCoordinate = new GeoCoordinateAltitude();    }    /*    protected function onCreate()    {        $data = new Roundshot();        //$data->updateOnDuplicate = true;        $data->active = true;        $data->roundshotNumber = $this->roundshotNumber;        $data->roundshot = $this->roundshot;        $data->url = $this->url;        $data->geoCoordinate = $this->geoCoordinate;        $this->dataId = $data->save();        $this->saveContent();        $builder = new TreeBuilder();        $builder->parentId = (new RoundshotContentType())->getContentId();        $builder->childId = $this->getContentId();        $builder->write();        /*         $id = new RoundshotId();         $id->filter->andEqual($id->model->url, $this->url);         $this->dataId = $id->getId();*/    //}    /*    protected function onUpdate()    {        $update = new RoundshotUpdate();        $update->roundshot = $this->roundshot;        $update->updateById($this->dataId);    }    protected function onIndex()    {        $roundshotRow = $this->getDataRow();        $this->addSearchWord($roundshotRow->roundshot);        $this->saveGeoIndex();    }*/    protected function onDelete()    {        //  $this->deleteSearchIndex();        //$this->deleteGeoIndex();        (new RoundshotDelete())->deleteById($this->dataId);    }    protected function onDataRow()    {        $this->dataRow = (new RoundshotReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|RoundshotRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getPlace()    {        return $this->getDataRow()->roundshot;    }    public function getCoordinate()    {        return $this->getDataRow()->geoCoordinate;    }    /*    public function existItem()    {        $exists = false;        $count = new RoundshotCount();        $count->filter->andEqual($count->model->url, $this->url);        if ($count->getCount() === 1) {            $exists = true;            $id = new RoundshotId();            $id->filter->andEqual($id->model->url, $this->url);            $this->dataId = $id->getId();        }        return $exists;    }*/    public function getSubject()    {        $row = (new RoundshotReader())->getRowById($this->dataId);        return $row->roundshot;    }    //https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTKq9Hw53y1owbdYPg-ezRiOAAQI_lQPJOstA&usqp=CAU    public function getImageUrl()    {        $url = $this->getDataRow()->url . 'cams/' . $this->getDataRow()->roundshotNumber . '/thumbnail';        return $url;    }    public function getData()    {        $data = [];        $data['roundshot'] = $this->getDataRow()->roundshot;        $data['url'] = $this->getDataRow()->url;        $data['image_url'] = $this->getImageUrl();        return $data;    }    /*    public function getText()    {        return '';    }*/}