<?phpnamespace Nemundo\Roundshot\App\Timelapse\Content\TimelapseVideo;use Nemundo\Content\Index\Tree\Com\Form\ContentSearchForm;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Roundshot\App\Timelapse\Data\Timelapse\Timelapse;use Nemundo\Roundshot\App\Timelapse\Data\Timelapse\TimelapseReader;use Nemundo\Roundshot\App\Timelapse\Data\Timelapse\TimelapseRow;class TimelapseVideoContentType extends AbstractContentType{    public $roundshotId;    public $date;    public $videoFilename;    protected function loadContentType()    {        $this->typeLabel = 'Roundshot Timelapse Video';        $this->typeId = '28823dfd-838f-4a2b-8e35-e0077ee8b87c';        //$this->formClassList[] = TimelapseVideoContentForm::class;        $this->formClassList[] = ContentSearchForm::class;        $this->viewClassList[] = TimelapseVideoContentView::class;    }    protected function onCreate()    {        $data = new Timelapse();        $data->roundshotId = $this->roundshotId;        $data->date = $this->date;        $data->video->fromFilename($this->videoFilename);        $this->dataId = $data->save();    }    protected function onUpdate()    {    }    protected function onDelete()    {    }    protected function onIndex()    {    }    protected function onDataRow()    {        $reader = new TimelapseReader();        $reader->model->loadRoundshot();        $this->dataRow = $reader->getRowById($this->getDataId());    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|TimelapseRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        $subject = $this->getDataRow()->roundshot->roundshot . ' ' . $this->getDataRow()->date->getIsoDate();        return $subject;    }}