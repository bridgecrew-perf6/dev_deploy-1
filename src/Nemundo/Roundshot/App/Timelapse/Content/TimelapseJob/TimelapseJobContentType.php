<?phpnamespace Nemundo\Roundshot\App\Timelapse\Content\TimelapseJob;use Nemundo\App\SystemLog\Message\SystemLogMessage;use Nemundo\Content\App\ImageTimeline\Cmd\TimelapseCmd;use Nemundo\Content\App\ImageTimeline\Path\ImageTimelineTmpPath;use Nemundo\Content\App\Job\Content\AbstractJobContentType;use Nemundo\Content\App\Notification\Builder\NotificationBuilder;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Local\LocalCommand;use Nemundo\Core\File\File;use Nemundo\Project\Path\TmpPath;use Nemundo\Roundshot\App\Timelapse\Content\TimelapseVideo\TimelapseVideoContentType;use Nemundo\Roundshot\App\Timelapse\Data\TimelapseJob\TimelapseJobReader;use Nemundo\Roundshot\App\Timelapse\Data\TimelapseJob\TimelapseJobRow;use Nemundo\Roundshot\Application\RoundshotApplication;use Nemundo\Roundshot\Download\RoundshotImageDownload;use Nemundo\Roundshot\Path\DayRoundshotCachePath;class TimelapseJobContentType extends AbstractJobContentType{    protected function loadContentType()    {        $this->typeLabel = 'Roundshot Timelapse Job';        $this->typeId = '1b47fd98-7408-425f-9721-55e9eb4b964a';        $this->formClassList[] = TimelapseJobContentForm::class;        $this->viewClassList[] = TimelapseJobContentView::class;    }    protected function onCreate()    {    }    protected function onUpdate()    {    }    protected function onDelete()    {    }    protected function onIndex()    {    }    protected function onDataRow()    {        $reader = new TimelapseJobReader();        $reader->model->loadRoundshot();        $this->dataRow = $reader->getRowById($this->getDataId());    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|TimelapseJobRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getSubject()    {        $subject = $this->getDataRow()->roundshot->roundshot . ' ' . $this->getDataRow()->date->getIsoDate();        return $subject;    }    public function run()    {        $jobRow = $this->getDataRow();        $download = new RoundshotImageDownload();        $download->roundshotRow = $jobRow->roundshot;        $download->date = $jobRow->date;        $download->downloadImage();        $imagePath = (new DayRoundshotCachePath($jobRow->roundshot, $jobRow->date))            ->addPath('%d.jpg')            ->getFullFilename();        $videoFilename = (new TmpPath())            ->addPath($jobRow->roundshot->roundshotNumber . '_' . $jobRow->date->getIsoDate().'.mp4')            ->getFullFilename();        $videoFile=new File($videoFilename);        //$cmd = 'sudo ffmpeg -framerate 10 -pattern_type glob -i "670/2021-05-03/*.jpg" -s:v 1440x1080 -c:v libx264 -crf 17 -pix_fmt yuv420p my-timelapse4.mp4        // %04d        //$cmd = 'sudo ffmpeg -framerate 10 -pattern_type glob -i "' . $imagePath . '" -s:v 1440x1080 -c:v libx264 -crf 17 -pix_fmt yuv420p ' . $videoFilename;        //$cmd = 'ffmpeg -framerate 5 -i "' . $imagePath . '" -s:v 1440x1080 -c:v libx264 -crf 17 -pix_fmt yuv420p ' . $videoFilename;        //(new Debug())->write($cmd);        // ffmpeg -framerate 5 -i "D:\Cache\roundshot\19\2021-05-03\%d.jpg" -s:v 1440x1080 -c:v libx264 -crf 17 -pix_fmt yuv420p C:\git\tmp\19_2021-05-03.mp4        //$localCmd=new LocalCommand();        //$localCmd->runLocalCommand($cmd);        $cmd = new TimelapseCmd();        $cmd->framerate = 10;        $cmd->imagePath =$imagePath;        $cmd->videoFilename = $videoFilename;        $output = $cmd->createVideo();        if ($videoFile->fileExists()) {            $timelapseContentType=new TimelapseVideoContentType();            $timelapseContentType->roundshotId=$jobRow->roundshotId;            $timelapseContentType->date=$jobRow->date;            $timelapseContentType->videoFilename = $videoFilename;            $timelapseContentType->saveType();            $builder=new NotificationBuilder($timelapseContentType);            $builder->createNotification($jobRow->userId);        }else {            (new SystemLogMessage(new RoundshotApplication()))->logError($output);        }        $videoFile->deleteFile();        //ffmpeg -framerate 10 -i "D:\Cache\roundshot\155\2021-05-03\*.jpg" -s:v 1440x1080 -c:v libx264 -crf 17 -pix_fmt yuv420p C:\git\tmp\155_2021-05-03.mp4//    (new Debug())->write('video converter'.$jobRow->roundshot->url);        // TODO: Implement run() method.    }}