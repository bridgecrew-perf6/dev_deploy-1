<?phpnamespace Paranautik\App\Roundshot\Import;use Nemundo\App\Script\Type\AbstractConsoleScript;use Nemundo\Core\System\Delay;use Nemundo\Core\Type\DateTime\Date;use Nemundo\Db\Sql\Order\SortOrder;use Paranautik\App\Roundshot\Data\Roundshot\RoundshotReader;use Paranautik\App\Roundshot\Data\RoundshotImage\RoundshotImageReader;use Paranautik\App\Roundshot\Download\ImageDownload;use Paranautik\App\Roundshot\Download\ImageListDownload;class RoundshotLatestImageImport extends AbstractConsoleScript{    protected function loadScript()    {        $this->scriptName = 'roundshot-latest-image';    }    public function run()    {        $roundshotReader = new RoundshotReader();        //$downloadReader = new RoundshotDownloadReader();        //$downloadReader->filter->andEqual($downloadReader->model->download, false);        foreach ($roundshotReader->getData() as $roundshotRow) {            $download = new ImageListDownload();            $download->roundshotId = $roundshotRow->id;            $download->date = (new Date())->setNow();            $download->download();            $reader = new RoundshotImageReader();            $reader->filter->andEqual($reader->model->roundshotId, $roundshotRow->id);            $reader->filter->andEqual($reader->model->download, false);            $reader->addOrder($reader->model->dateTime, SortOrder::DESCENDING);            $reader->limit = 1;            foreach ($reader->getData() as $imageRow) {                $imageDownload = new ImageDownload();                $imageDownload->imageId = $imageRow->id;                $imageDownload->download();            }            (new Delay())->delay(2);        }        /*        $imageReader = new RoundshotImageReader();        $imageReader->addGroup($imageReader->model->roundshotId);        $imageReader->addOrder($imageReader->model->dateTime, SortOrder::DESCENDING);        foreach ($imageReader->getData() as $imageRow) {        }*/    }}