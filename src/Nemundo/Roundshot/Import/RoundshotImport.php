<?phpnamespace Nemundo\Roundshot\Import;use Nemundo\Content\Builder\IndexBuilder;use Nemundo\Content\Index\Geo\Action\GeoIndexAction;use Nemundo\Content\Index\Search\Action\SearchIndexAction;use Nemundo\Content\Index\Tree\Action\TreeAction;use Nemundo\Content\Type\Index\ContentIndexAction;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\Base\AbstractImport;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Json\Reader\JsonReader;use Nemundo\Roundshot\Content\Webcam\RoundshotWebcamContentType;use Nemundo\Roundshot\Data\Roundshot\Roundshot;use Nemundo\Roundshot\Data\Roundshot\RoundshotId;use Nemundo\Roundshot\Data\Roundshot\RoundshotUpdate;class RoundshotImport extends AbstractImport{    public function importData()    {        // Delete Old Items        $update = new RoundshotUpdate();        $update->active = false;        $update->update();        $url = 'https://backend.roundshot.com/embedded/map/203';        $jsonReader = new JsonReader();        $jsonReader->fromUrl($url);        foreach ($jsonReader->getData() as $roundshotNumber => $jsonRow) {            $cam = $jsonRow['cam'];            $instance = $jsonRow['instances'];            $number = array_keys($instance)[0];            $data = new Roundshot();            $data->updateOnDuplicate = true;            $data->active = true;            $data->roundshotNumber = $roundshotNumber;            $data->roundshot = $instance[$number]['title'];            $data->url = $instance[$number]['url'];            $data->geoCoordinate->latitude = $cam['latitude'];            $data->geoCoordinate->longitude = $cam['longitude'];            $data->geoCoordinate->altitude = $cam['altitude'];            $data->save();            $id = new RoundshotId();            $id->filter->andEqual($id->model->roundshotNumber, $roundshotNumber);            $dataId = $id->getId();            //(new Debug())->write($dataId);            $content = new RoundshotWebcamContentType($dataId);            //(new Debug())->write($content->getContentId());            (new IndexBuilder())->buildIndex($content);            //(new TreeAction())->onAction();            //(new GeoIndexAction())->onAction($content);            //(new ContentIndexAction())            /*            (new ContentIndexAction())->onAction($type);            (new GeoIndexAction())->onAction($type);            $action = new SearchIndexAction();            $action->addText($type->getSubject());            $action->onAction($type);*/            /*            (new ContentIndexBuilder($type))->buildIndex();            (new GeoIndexBuilder($type))->buildIndex();            $index=new SearchIndexBuilder($type);            $index->addText($type->getSubject());            $index->buildIndex();*/            /*            $type = new RoundshotWebcamContentType();            $type->roundshotNumber = $roundshotNumber;            $type->roundshot = $instance[$number]['title'];            $type->url = $instance[$number]['url'];            $type->geoCoordinate->latitude = $cam['latitude'];            $type->geoCoordinate->longitude = $cam['longitude'];            $type->geoCoordinate->altitude = $cam['altitude'];            $type->saveType();*/        }    }}