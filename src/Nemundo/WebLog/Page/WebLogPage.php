<?phpnamespace Nemundo\WebLog\Page;use Nemundo\Admin\Com\Table\AdminBootstrapTable;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Admin\Com\Table\Sorting\AdminUpdDownSortingHyperlink;use Nemundo\Admin\Parameter\SortingParameter;use Nemundo\Com\Html\Hyperlink\UrlHyperlink;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Db\Sql\Order\SortOrder;use Nemundo\WebLog\Data\WebLog\WebLogPaginationReader;use Nemundo\WebLog\Template\WebLogTemplate;class WebLogPage extends WebLogTemplate{    public function getContent()    {        // search        $table = new AdminTable($this);        $webLogReader = new WebLogPaginationReader();        $webLogReader->model->loadUser();        $webLogReader->paginationLimit = 200;        $header = new AdminTableHeader($table);        $header->addText($webLogReader->model->dateTime->label);        $header->addText($webLogReader->model->domain->label);        $header->addText($webLogReader->model->url->label);        $header->addText($webLogReader->model->urlReferer->label);        $header->addText($webLogReader->model->ip->label);        $header->addText($webLogReader->model->browserAgent->label);        $header->addText($webLogReader->model->tracking->label);        $header->addText($webLogReader->model->user->label);        //$header->addText($reader->model->loadingTime->label);        $sorting = new AdminUpdDownSortingHyperlink($header);        $sorting->fieldType = $webLogReader->model->loadingTime;        $sorting->checkSorting($webLogReader);        if ((new SortingParameter())->notExists()) {            $webLogReader->addOrder($webLogReader->model->id, SortOrder::DESCENDING);        }        foreach ($webLogReader->getData() as $webLogRow) {            $row = new AdminTableRow($table);            $row->addText($webLogRow->dateTime->getIsoDateTime());            $row->addText($webLogRow->domain);            //$row->addText($webLogRow->url);            $url = new UrlHyperlink($row);            $url->content = $webLogRow->url;            $url->url = $webLogRow->url;            $row->addText($webLogRow->urlReferer);            $row->addText($webLogRow->ip);            $row->addText($webLogRow->browserAgent);            $row->addText($webLogRow->tracking);            if ($webLogRow->userLogged) {                $row->addText($webLogRow->user->login);            } else {                $row->addEmpty();            }            $row->addText($webLogRow->loadingTime);        }        return parent::getContent();    }}