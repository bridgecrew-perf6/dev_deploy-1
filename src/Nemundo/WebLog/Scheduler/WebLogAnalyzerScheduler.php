<?phpnamespace Nemundo\WebLog\Scheduler;use Nemundo\App\Scheduler\Job\AbstractScheduler;use Nemundo\Db\Sql\Field\CountField;use Nemundo\WebLog\Data\BrowserAgent\BrowserAgent;use Nemundo\WebLog\Data\BrowserAgent\BrowserAgentValue;use Nemundo\WebLog\Data\UrlLog\UrlLog;use Nemundo\WebLog\Data\UrlLog\UrlLogValue;use Nemundo\WebLog\Data\WebLog\WebLogDelete;use Nemundo\WebLog\Data\WebLog\WebLogReader;class WebLogAnalyzerScheduler extends AbstractScheduler{    protected function loadScheduler()    {        //$this->active=true;        $this->overrideSetting=false;        $this->hour = 1;        $this->consoleScript = true;        $this->scriptName = 'weblog-analyzer';    }    public function run()    {        $webLogReader = new WebLogReader();        $webLogReader->addGroup($webLogReader->model->url);        $count = new CountField($webLogReader);        foreach ($webLogReader->getData() as $webLogRow) {            $value = new UrlLogValue();            $value->field = $value->model->visitor;            $value->filter->andEqual($value->model->url,$webLogRow->url);            $visitor = $value->getValue();            $visitor = $visitor + $webLogRow->getModelValue($count);            $data = new UrlLog();            $data->updateOnDuplicate = true;            $data->url = $webLogRow->url;            $data->visitor = $visitor;  // $webLogRow->getModelValue($count);            $data->save();        }        $webLogReader = new WebLogReader();        $webLogReader->addGroup($webLogReader->model->browserAgent);        $count = new CountField($webLogReader);        foreach ($webLogReader->getData() as $webLogRow) {            $value = new BrowserAgentValue();            $value->field = $value->model->count;            $visitor = $value->getValue();            $visitor = $visitor + $webLogRow->getModelValue($count);            $data =new BrowserAgent();            $data->updateOnDuplicate = true;            $data->browserAgent = $webLogRow->browserAgent;            $data->count = $visitor;            $data->save();        }        (new WebLogDelete())->delete();        // delete web log        // active    }}