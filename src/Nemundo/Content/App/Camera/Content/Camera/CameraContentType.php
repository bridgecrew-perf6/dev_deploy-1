<?phpnamespace Nemundo\Content\App\Camera\Content\Camera;use Nemundo\Content\App\Camera\Data\Camera\CameraDelete;use Nemundo\Content\App\Camera\Data\Camera\CameraReader;use Nemundo\Content\App\Camera\Data\Camera\CameraRow;use Nemundo\Content\Index\Calendar\DateTimeIndexTrait;use Nemundo\Content\Index\Geo\Type\GeoIndexTrait;use Nemundo\Content\Index\Tree\Com\Form\ContentSearchForm;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Content\Type\JsonContentTrait;use Nemundo\Content\Type\WebServiceTrait;class CameraContentType extends AbstractContentType{    use DateTimeIndexTrait;    use WebServiceTrait;    //use JsonContentTrait;    use GeoIndexTrait;    protected function loadContentType()    {        $this->typeLabel = 'Camera';        $this->typeId = 'd7ce44a9-7a62-4c88-9e48-7859df3de1b2';        $this->formClassList[] = CameraContentForm::class;        $this->formClassList[] = ContentSearchForm::class;        $this->viewClassList[] = CameraContentView::class;        $this->listingClass = CameraContentListing::class;        $this->webServiceClass = CameraContentService::class;    }    protected function onDelete()    {        (new CameraDelete())->deleteById($this->dataId);    }    protected function onDataRow()    {        $this->dataRow = (new CameraReader())->getRowById($this->dataId);    }    /**     * @return \Nemundo\Model\Row\AbstractModelDataRow|CameraRow     */    public function getDataRow()    {        return parent::getDataRow();    }    public function getData()    {        $cameraRow = $this->getDataRow();        $data = [];        $data['camera'] = $cameraRow->camera;        $data['filename'] = $cameraRow->image->getFilename();        $data['image_url'] = $cameraRow->image->getImageUrl($cameraRow->model->imageAutoSize1200);        return $data;    }    public function getSubject()    {        $subject = $this->getDataRow()->dateTime->getLongFormat();        return $subject;    }    public function getDate()    {        return $this->getDataRow()->dateTime->getDate();    }    public function getDateTime()    {        return $this->getDataRow()->dateTime;    }    protected function getImageFilename()    {        return $this->getDataRow()->image->getFullFilename();    }    public function getCoordinate()    {        return $this->getDataRow()->geoCoordinate;    }}