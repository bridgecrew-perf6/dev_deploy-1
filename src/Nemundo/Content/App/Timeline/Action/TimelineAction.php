<?phpnamespace Nemundo\Content\App\Timeline\Action;use Nemundo\Content\Action\AbstractAction;use Nemundo\Content\App\Timeline\Data\Timeline\Timeline;use Nemundo\Content\Index\Calendar\DateTimeIndexTrait;use Nemundo\Content\Type\AbstractContentType;class TimelineAction extends AbstractAction{    /**     * @var AbstractContentType|DateTimeIndexTrait     */    //protected $content;    protected function loadAction()    {        // TODO: Implement loadAction() method.    }    /**     * @param AbstractContentType|DateTimeIndexTrait $content     */    public function onAction(AbstractContentType $content)    {        if ($content->isObjectOfTrait(DateTimeIndexTrait::class)) {        $data = new Timeline();        $data->updateOnDuplicate = true;        $data->contentId = $content->getContentId();        $data->dateTime = $content->getDateTime();        $data->date = $content->getDate();        $data->subject = $content->getSubject();        $data->save();        }        /*        $count = new TimelineCount();        $count->filter->andEqual($count->model->contentId, $this->contentType->getContentId());        if ($count->getCount() == 0) {            $data = new Timeline();            $data->contentId = $this->contentType->getContentId();            $data->dateTime = $this->contentType->getDateTime();            $data->date = $this->contentType->getDate();            $data->subject = $this->contentType->getSubject();            $data->save();        } else {            $update = new TimelineUpdate();            $update->filter->andEqual($count->model->contentId, $this->contentType->getContentId());            $update->dateTime = $this->contentType->getDateTime();            $update->date = $this->contentType->getDate();            $update->subject = $this->contentType->getSubject();            $update->update();        }*/        // TODO: Implement buildIndex() method.    }    public function deleteIndex()    {        // TODO: Implement deleteIndex() method.    }}