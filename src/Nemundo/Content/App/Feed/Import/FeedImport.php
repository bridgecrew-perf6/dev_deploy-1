<?phpnamespace Nemundo\Content\App\Feed\Import;use Nemundo\Content\App\Feed\Content\Feed\FeedContentType;use Nemundo\Content\App\Feed\Content\Item\FeedItemContentType;use Nemundo\Content\App\Feed\Data\Feed\Feed;use Nemundo\Content\App\Feed\Data\Feed\FeedId;use Nemundo\Content\App\Feed\Data\Feed\FeedReader;use Nemundo\Content\App\Feed\Data\FeedItem\FeedItemCount;use Nemundo\Content\Builder\IndexBuilder;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\Type\Text\Text;use Nemundo\Rss\Reader\RssReader;class FeedImport extends AbstractBase{    public function importFeed($feedUrl)    {        $feedUrl = (new Text($feedUrl))->trim()->getValue();        if ($feedUrl !== '') {            $rssReader = new RssReader();            $rssReader->feedUrl = $feedUrl;            //(new Debug())->write($rssReader->getImageUrl());            $data = new Feed();            //$data->ignoreIfExists = true;            $data->updateOnDuplicate = true;            $data->feedUrl = $feedUrl;            $data->title = $rssReader->getTitle();            $data->description = $rssReader->getDescription();            //$data->feedImage->fromUrl($rssReader->getImageUrl());            $data->save();            $id = new FeedId();            $id->filter->andEqual($id->model->feedUrl, $feedUrl);            $feedId = $id->getId();            $feedType = new FeedContentType($feedId);            (new IndexBuilder())->buildIndex($feedType);            /*            $feedType = new FeedContentType();            $feedType->feedTitle = $rssReader->getTitle();            $feedType->description = $rssReader->getDescription();            $feedType->feedUrl = $feedUrl;            $feedType->saveType();*/            foreach ($rssReader->getData() as $rssItem) {                $count = new FeedItemCount();                $count->filter->andEqual($count->model->url, $rssItem->url);                if ($count->getCount() == 0) {                    $itemType = new FeedItemContentType();                    $itemType->feedId = $feedType->getDataId();                    $itemType->title = $rssItem->title;                    $itemType->description = $rssItem->description;                    $itemType->url = $rssItem->url;                    $itemType->feedDateTime = $rssItem->dateTime;                    if ($rssItem->enclosureType == 'image/jpeg') {                        $itemType->imageUrl = $rssItem->enclosureUrl;                    }                    if (($rssItem->enclosureType == 'audio/mp3') || ($rssItem->enclosureType == 'audio/mpeg')) {                        $itemType->audioUrl = $rssItem->enclosureUrl;                        $itemType->url = $itemType->audioUrl;                    }                    $itemType->saveType();                }            }        }    }    public function importFeedList()    {        $reader = new FeedReader();        foreach ($reader->getData() as $feedRow) {            $this->importFeed($feedRow->feedUrl);        }    }}