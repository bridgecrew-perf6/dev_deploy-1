<?phpnamespace Nemundo\Content\Page;use Nemundo\Admin\Com\Card\AdminCard;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminTwoColumnGridLayout;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Content\Builder\ContentBuilder;use Nemundo\Content\Com\ListBox\ContentTypeListBox;use Nemundo\Content\Parameter\ContentParameter;use Nemundo\Content\Parameter\ContentTypeParameter;use Nemundo\Content\Reader\ContentDataReader;use Nemundo\Content\Site\ContentSite;use Nemundo\Content\Template\ContentTemplate;use Nemundo\Html\Block\Div;class ContentPage extends ContentTemplate{    public function getContent()    {        $container = new AdminTwoColumnGridLayout($this);        $left = new Div($container);        $right = new Div($container);        $form = new AdminSearchForm($left);        $contentType = new ContentTypeListBox($form);        $contentType->searchMode=true;        $contentType->submitOnChange=true;        $table = new AdminTable($left);        $header = new TableHeader($table);        $header->addText('Subject');        $header->addText('Content Type');        $header->addEmpty();        $contentReader = new ContentDataReader();        if ($contentType->hasValue()) {            $contentReader->setContentTypeId($contentType->getValue());        }        foreach ($contentReader->getData() as $contentRow) {            $tableRow = new TableRow($table);            $tableRow->addText($contentRow->subject);            $tableRow->addText($contentRow->contentType->contentType);            $site=clone(ContentSite::$site);            $site->title='Show';            $site->addParameter(new ContentTypeParameter());            $site->addParameter(new ContentParameter($contentRow->id));            $tableRow->addSite($site);        }        $pagination = new AdminPagination($left);        $pagination->paginationReader = $contentReader;        $contentParameter=new ContentParameter();        if ($contentParameter->hasValue()) {            $card=new AdminCard($right);            $content= (new ContentBuilder())->getContent($contentParameter->getValue());            $card->cardTitle=$content->getSubject();            $content->getDefaultView($card);        }        //$table=new ContentTable($this);        /*        $contentTypeParameter = new ContentTypeParameter();        if ($contentTypeParameter->hasValue()) {            $contentType = $contentTypeParameter->getContentType();            $layout = new BootstrapTwoColumnLayout($this);            if ($contentType->hasList()) {                $contentTypeListBox = $contentType->getListing($layout->col1);                $contentTypeListBox->redirectSite = clone(ContentSite::$site);                $contentTypeListBox->redirectSite->addParameter(new ContentTypeParameter());                $contentTypeListBox->redirectSite->addParameter(new PageParameter());            }            $contentParameter = new ContentParameter();            if ($contentParameter->hasValue()) {                $content = $contentParameter->getContent(false);                if ($content->hasView()) {                    $widget = new ContentWidget($layout->col2);                    $widget->contentType = $content;                    $widget->showAction = false;                    $widget->loadAction = false;                    $widget->redirectSite = ContentSite::$site;                    $jsonSite = clone(ContentViewJsonSite::$site);                    $jsonSite->addParameter(new ContentParameter());                    $txt = new CopyTextBox($layout->col2);                    $txt->value = $jsonSite->getUrlWithDomain();                }            }        }*/        return parent::getContent();    }}