<?phpnamespace Nemundo\Content\Page;use Nemundo\Admin\Com\Copy\CopyTextBox;use Nemundo\Admin\Parameter\PageParameter;use Nemundo\Content\Com\Widget\ContentWidget;use Nemundo\Content\Parameter\ContentParameter;use Nemundo\Content\Parameter\ContentTypeParameter;use Nemundo\Content\Site\ContentSite;use Nemundo\Content\Site\Json\ContentViewJsonSite;use Nemundo\Content\Template\ContentTemplate;use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;class ContentPage extends ContentTemplate{    public function getContent()    {        $contentTypeParameter = new ContentTypeParameter();        if ($contentTypeParameter->hasValue()) {            $contentType = $contentTypeParameter->getContentType();            $layout = new BootstrapTwoColumnLayout($this);            if ($contentType->hasList()) {                $contentTypeListBox = $contentType->getListing($layout->col1);                $contentTypeListBox->redirectSite = clone(ContentSite::$site);                $contentTypeListBox->redirectSite->addParameter(new ContentTypeParameter());                $contentTypeListBox->redirectSite->addParameter(new PageParameter());            }            $contentParameter = new ContentParameter();            if ($contentParameter->hasValue()) {                $content = $contentParameter->getContent(false);                if ($content->hasView()) {                    $widget = new ContentWidget($layout->col2);                    $widget->contentType = $content;                    $widget->showAction = false;                    $widget->loadAction = false;                    $widget->redirectSite = ContentSite::$site;                    $jsonSite = clone(ContentViewJsonSite::$site);                    $jsonSite->addParameter(new ContentParameter());                    $txt = new CopyTextBox($layout->col2);                    $txt->value = $jsonSite->getUrlWithDomain();                }            }        }        return parent::getContent();    }}