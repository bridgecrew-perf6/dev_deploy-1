<?phpnamespace Nemundo\Content\Index\Search\Action;use Nemundo\Admin\Com\Table\AdminBootstrapTable;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Com\TableBuilder\TableRow;use Nemundo\Content\Action\AbstractActionView;use Nemundo\Content\Index\Search\Data\SearchIndex\SearchIndexReader;use Nemundo\Content\Index\Search\Data\WordContentType\WordContentTypeReader;use Nemundo\Core\Directory\TextDirectory;use Nemundo\Html\Paragraph\Paragraph;class SearchActionView extends AbstractActionView{    public function getContent()    {        //$table = new AdminTable($this);  // new AdminBootstrapTable($this);/*        $reader = new WordContentTypeReader();        $reader->model->loadContentType();        $reader->addOrder($reader->model->word);        $reader->filter->andEqual($reader->model->contentTypeId, $this->content->typeId);*/        $reader = new SearchIndexReader();  // new WordContentTypeReader();        $reader->model->loadWord();        //$reader->model->loadContentType();        $reader->filter->andEqual($reader->model->contentId,$this->content->getContentId());  // contentTypeId, $this->content->typeId);        $reader->addOrder($reader->model->word);        $list=new TextDirectory();        /*$header = new TableHeader($table);        $header->addText($reader->model->word->label);*/        foreach ($reader->getData() as $wordRow) {            $list->addValue($wordRow->word->word);            /*$row = new TableRow($table);            $row->addText($wordRow->word->word);*/        }        $p=new Paragraph($this);        $p->content=$list->getTextWithSeperator();        return parent::getContent(); // TODO: Change the autogenerated stub    }}