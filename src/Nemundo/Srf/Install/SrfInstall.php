<?phpnamespace Nemundo\Srf\Install;use Nemundo\App\Application\Setup\ApplicationSetup;use Nemundo\App\Application\Type\Install\AbstractInstall;use Nemundo\App\Scheduler\Setup\SchedulerSetup;use Nemundo\App\Script\Setup\ScriptSetup;use Nemundo\App\WebService\Setup\ServiceRequestSetup;use Nemundo\Content\Application\ContentApplication;use Nemundo\Content\Install\ContentInstall;use Nemundo\Content\Setup\ContentTypeSetup;use Nemundo\Model\Setup\ModelCollectionSetup;use Nemundo\Srf\Application\SrfApplication;use Nemundo\Srf\Content\RadioShow\RadioShowContentType;use Nemundo\Srf\Content\TvEpisode\TvEpisodeContentType;use Nemundo\Srf\Content\TvShow\TvShowContentType;use Nemundo\Srf\Data\MediaType\MediaType;use Nemundo\Srf\Data\SrfModelCollection;use Nemundo\Srf\MediaType\AbstractMediaType;use Nemundo\Srf\MediaType\RadioMediaType;use Nemundo\Srf\MediaType\TvMediaType;use Nemundo\Srf\Scheduler\SrfCrawlerScheduler;use Nemundo\Srf\Script\SrfCleanScript;use Nemundo\Srf\Script\SrfShowImportScript;use Nemundo\Srf\Script\SrfTestScript;use Nemundo\Srf\Service\EpisodeService;use Nemundo\Srf\Service\ShowService;class SrfInstall extends AbstractInstall{    public function install()    {        //(new ContentInstall())->install();        (new ContentApplication())->installApp();        (new ApplicationSetup())            ->addApplication(new SrfApplication());        (new ModelCollectionSetup())            ->addCollection(new SrfModelCollection());        $this->addMediaType(new RadioMediaType());        $this->addMediaType(new TvMediaType());        (new ScriptSetup(new SrfApplication()))            ->addScript(new SrfShowImportScript())            ->addScript(new SrfTestScript())            ->addScript(new SrfCleanScript());        (new SchedulerSetup(new SrfApplication()))            ->addScheduler(new SrfCrawlerScheduler());        (new ContentTypeSetup(new SrfApplication()))            ->addContentType(new TvEpisodeContentType())            ->addContentType(new RadioShowContentType())            ->addContentType(new TvShowContentType());        (new ServiceRequestSetup(new SrfApplication()))            ->addService(new ShowService())            ->addService(new EpisodeService());    }    private function addMediaType(AbstractMediaType $mediaType)    {        $data = new MediaType();        $data->updateOnDuplicate = true;        $data->id = $mediaType->id;        $data->media = $mediaType->media;        $data->save();    }}