<?phpnamespace Nemundo\Srf\Page;use Nemundo\Admin\Com\Breadcrumb\AdminBreadcrumb;use Nemundo\Admin\Com\Title\AdminSubtitle;use Nemundo\Admin\Com\Title\AdminSubtitleContainer;use Nemundo\Admin\Com\Title\AdminTitle;use Nemundo\Admin\Com\Video\AdminResponsiveVideo;use Nemundo\Content\Action\Com\Container\ContentActionContainer;use Nemundo\Content\App\File\Content\Video\VideoContentView;use Nemundo\Content\App\Video\Content\YouTube\YouTubeContentView;use Nemundo\Core\Debug\Debug;use Nemundo\Html\Block\Div;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Html\Player\VideoPlayer;use Nemundo\Srf\Com\Breadcrumb\SrfBreadcrumb;use Nemundo\Srf\Com\Player\SrfPlayer;use Nemundo\Srf\Content\TvEpisode\TvEpisodeContentType;use Nemundo\Srf\Data\Episode\EpisodeReader;use Nemundo\Srf\Parameter\EpisodeParameter;use Nemundo\Srf\Site\SrfSite;use Nemundo\Srf\Template\SrfTemplate;use NewsCrawler\Video\Srf\Content\SrfVideoContentType;class EpisodeItemPage extends SrfTemplate{    public function getContent()    {        $episodeId = (new EpisodeParameter())->getValue();        $episodeReader = new EpisodeReader();        $episodeReader->model->loadShow();        $episodeRow = $episodeReader->getRowById($episodeId);        $breadcrumb= new SrfBreadcrumb($this);        $breadcrumb->showRow=$episodeRow->show;        $breadcrumb->episodeRow=$episodeRow;        //$breadcrumb->addSite(SrfSite::$site);        $title = new AdminSubtitle($this);        $title->content = $episodeRow->title;        $p = new Paragraph($this);        $p->content = $episodeRow->description;        $div = new AdminResponsiveVideo($this);  // new Div($this);  // new BootstrapRatioDiv($this);        //$div->addCssClass('admin-embedded-video');        $player = new SrfPlayer($div);        $player->urn = $episodeRow->urn;        /*$player->width = 800;        $player->height = 700;*/        $player->autoPlay = true;        $content = new TvEpisodeContentType($episodeRow->id);        $action=new ContentActionContainer($this);        $action->content=$content;        //(new Debug())->write($content->getSubject());        /*        new YouTubeContentView()        new VideoContentView()*/        return parent::getContent();    }}