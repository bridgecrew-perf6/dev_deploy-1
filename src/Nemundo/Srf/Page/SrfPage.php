<?phpnamespace Nemundo\Srf\Page;use Nemundo\Admin\Com\Button\AdminSearchButton;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Image\AdminImage;use Nemundo\Admin\Com\Item\AdminItemHyperlinkContainer;use Nemundo\Admin\Com\Item\AdminItemList;use Nemundo\Admin\Com\Item\AdminItemText;use Nemundo\Admin\Com\Item\AdminItemTitle;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\ListBox\AdminSearchTextBox;use Nemundo\Core\Http\Request\Get\GetRequest;use Nemundo\Srf\Com\Breadcrumb\SrfBreadcrumb;use Nemundo\Srf\Data\Show\ShowReader;use Nemundo\Srf\Parameter\ShowParameter;use Nemundo\Srf\Site\ShowSite;use Nemundo\Srf\Template\SrfTemplate;class SrfPage extends SrfTemplate{    public function getContent()    {        //$this->mai        //admin-flexbox-layout        $layout = new AdminFlexboxLayout($this);        $breadcrumb = new SrfBreadcrumb($layout);        $form = new AdminSearchForm($layout);        //$form->site= SearchSite::$site;        $search = new AdminSearchTextBox($form);        $submit = new AdminSearchButton($form);        /*$layout = new BootstrapTwoColumnLayout($this);        $layout->col1->columnWidth = 2;        $layout->col2->columnWidth = 10;*/        //$list = new AdminListGroup($this);  // new AdminListGroupSiteHyperlink() new BootstrapSiteListGroup($layout->col1);        $list = new AdminItemList($layout);        $showReader = new ShowReader();        $showReader->model->loadMediaType();        //$showReader->filter->andEqual($showReader->model->crawler,true);        $parameter = new GetRequest('q');        if ($parameter->hasValue()) {            $query = $parameter->getValue();            $showReader->filter->andContains($showReader->model->show, $query);        }        $showReader->addOrder($showReader->model->show);        foreach ($showReader->getData() as $showRow) {            $item = new AdminItemHyperlinkContainer($list);  // new AdminListGroupItem($list);            $title = new AdminItemTitle($item);            $title->content = $showRow->show . ' (' . $showRow->mediaType->media . ')';            $img = new AdminImage($item);            $img->src = $showRow->image->getUrl();            $img->width = 400;            $description = new AdminItemText($item);            $description->content = $showRow->description;            $item->site = clone(ShowSite::$site);            //$site->title = $showRow->show . ' (' . $showRow->mediaType->media . ')';            $item->site->addParameter(new ShowParameter($showRow->id));            //$div->site;        }        /*        $showParameter = new ShowParameter();        if ($showParameter->exists()) {            $showId = $showParameter->getValue();            $showType = new TvShowContentType($showId);  // new SrfShowContentType($showId);            $title = new AdminTitle($layout->col2);            $title->content = $showType->getSubject();            $episodeReader = new EpisodeReader();            $episodeReader->filter->andEqual($episodeReader->model->showId, $showId);            $episodeReader->addOrder($episodeReader->model->dateTime, SortOrder::DESCENDING);            foreach ($episodeReader->getData() as $episodeRow) {                $subtitle = new AdminSubtitle($layout->col2);                $hyperlink = new SiteHyperlink($subtitle);                $hyperlink->content = $episodeRow->title;                $hyperlink->site = clone(SrfEpisodeItemSite::$site);                $hyperlink->site->addParameter(new EpisodeParameter($episodeRow->id));                $div = new ContentDiv($layout->col2);                $div->content = $episodeRow->dateTime->getShortDateTimeLeadingZeroFormat();                $div = new ContentDiv($layout->col2);                $div->content =  (new Second( $episodeRow->length))->getText();                //$div->content = 'Length: ' . $episodeRow->length;                //$div = new Div($layout->col2);                //$div->content = 'Length: ' . (new Second( $episodeRow->length))->getHourMinute();                //$div->content = 'Length: ' . $episodeRow->length;                $p = new Paragraph($layout->col2);                $p->content = $episodeRow->description;                $episodeType =new TvEpisodeContentType($episodeRow->id);                $shareButton = new Div($layout->col2);                /*$favoriteButton=new FavoriteButton($shareButton);                $favoriteButton->contentType = $episodeType;*/        /*$dashboard=new DashboardSaveForm($shareButton);        $dashboard->contentType = $episodeType;*/        /*$form = new StreamSaveForm($layout->col2);        $form->contentId = $episodeType->getContentId();*/        /*        (new Hr($layout->col2));            }        }*/        return parent::getContent();    }}